{"version":3,"sources":["components/SnakePart.js","components/Snake.jsx","gameSettings.js","words.js","components/Food.jsx","components/Dialog.jsx","components/Game.jsx","components/Menu.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SnakePart","this","props","x","y","type","from","to","directionStyle","style","gridRowStart","gridColumnStart","className","React","Component","Snake","state","partsList","length","dead","speed","update","bind","move","die","eat","now","before","animationID","window","requestAnimationFrame","cancelAnimationFrame","fromCoordinates","toCoordinates","fromX","fromY","xDiff","yDiff","index","coordinates","prevCoordinates","undefined","nextCoordinates","getDirectionFromCoordinates","key","foodList","newSnakePartPositions","boardWidth","boardHeight","directionVector","oldHeadPos","newHeadPos","ateOwnPart","some","part","outsideBoard","newSnakeBody","slice","newPartsList","setState","foodIndex","findIndex","food","previousLength","previousSpeed","map","getPartElementByIndex","symbols","numbers","animals","words","english","code","german","albanian","greek","dutch","danish","polish","chinese","turkish","FoodTile","styled","div","Food","subject","wordIndex","symbol","Container","Message","ButtonsContainer","Button","button","Dialog","exit","restart","onClick","Board","size","Header","LeftControls","RightControls","GameContainer","Game","Math","floor","boardSize","initialState","snakePositions","score","dialog","snakeKey","eatFood","generateFood","setDirectionVectorFromKeyEvent","lose","addEventListener","removeEventListener","event","positionIsOccupied","wordAlreadyChosen","language","occupiedPositions","newFoodList","i","newFood","random","word","push","msg","SpeechSynthesisUtterance","lang","text","speechSynthesis","speak","practiceWord","Title","h1","Options","form","Dropdown","label","PlayBtn","input","Menu","languages","Object","keys","subjects","setLanguage","setSubject","play","htmlFor","id","value","onChange","target","languageItem","subjectItem","Application","App","useState","screen","setScreen","getScreen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.146aa24f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./SnakePart.css\";\r\n\r\nexport default class SnakePart extends React.Component {\r\n    render() {\r\n        const {x, y, type, from, to} = this.props;\r\n        const directionStyle = `${from ? `snake-part-from-${from} ` : ''}${to ? `snake-part-to-${to}` : ''}`\r\n        return <div\r\n            style={{\r\n                gridRowStart: y,\r\n                gridColumnStart: x\r\n            }}\r\n            className={`snake-part snake-part-${type} ${directionStyle}`}\r\n        >\r\n        </div>;\r\n    }\r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SnakePart from './SnakePart';\nimport { snakeInitialSize, snakeLengthIncrease, initialSpeed, speedIncrement } from '../gameSettings';\n\nclass Snake extends React.Component {\n  constructor(props) {\n    super(props);\n    const { x, y } = this.props;\n    this.state = {\n      partsList: [\n        { x, y },\n        { x: x + 1, y },\n        { x: x + 2, y },\n      ],\n      length: snakeInitialSize,\n      dead: false,\n      speed: initialSpeed,\n    };\n    this.update = this.update.bind(this);\n    this.move = this.move.bind(this);\n    this.die = this.die.bind(this);\n    this.eat = this.eat.bind(this);\n  }\n\n  update(now) {\n    const { speed, dead } = this.state;\n\n    if (now - this.before > 1000 / speed) {\n      this.move();\n      this.before = now;\n    }\n\n    const animationID = window.requestAnimationFrame(this.update); \n    if (dead) window.cancelAnimationFrame(animationID);\n  }\n\n  componentDidMount() { \n    this.before = 0;\n    window.requestAnimationFrame(this.update);\n  }\n\n  getDirectionFromCoordinates(fromCoordinates, toCoordinates) {\n    if (!fromCoordinates || !toCoordinates) return;\n    const { x: fromX, y: fromY } = fromCoordinates;\n    const { x: toX, y: toY } = toCoordinates;\n    const [xDiff, yDiff] = [fromX - toX, fromY - toY];\n    if (yDiff === 0) {\n      if (xDiff === 1) return 'left';\n      else if (xDiff === -1) return 'right';\n    } else if (xDiff === 0) {\n      if (yDiff === 1) return 'up';\n      else if (yDiff === -1) return 'down';\n    }\n  }\n\n  getPartElementByIndex(index) {\n    const { partsList } = this.state;\n    const coordinates = partsList[index];\n    const type = index === 0 ? 'head' : (index === partsList.length - 1 ? 'tail' : 'middle');\n    const prevCoordinates = type === 'tail' ? undefined : partsList[index + 1];\n    const nextCoordinates = type === 'head' ? undefined : partsList[index - 1];\n    return (\n      <SnakePart  \n        x={coordinates.x}\n        y={coordinates.y}\n        type={type}\n        from={this.getDirectionFromCoordinates(coordinates, prevCoordinates)}\n        to={this.getDirectionFromCoordinates(coordinates, nextCoordinates)}\n        key={`${coordinates.x}-${coordinates.y}`}\n      />\n    );\n  }\n\n  move() {\n    const { partsList, length } = this.state;\n    const { foodList, newSnakePartPositions, boardWidth, boardHeight, directionVector } = this.props;\n    if (directionVector.x === 0 && directionVector.y === 0) return;\n\n    const oldHeadPos = partsList[0];\n    const newHeadPos = {\n      x: oldHeadPos.x + directionVector.x,\n      y: oldHeadPos.y + directionVector.y,\n    };\n\n    const ateOwnPart = partsList.some(\n      part => part.x === newHeadPos.x && part.y === newHeadPos.y,\n    );\n    const outsideBoard = newHeadPos.x <= 0 || newHeadPos.x > boardWidth ||\n            newHeadPos.y <= 0 || newHeadPos.y > boardHeight;\n\n    if (ateOwnPart || outsideBoard) {\n      this.die();\n      return;\n    }\n\n    const shouldGrow = length > partsList.length;\n    const newSnakeBody = shouldGrow ? partsList : partsList.slice(0, -1);\n    const newPartsList = [newHeadPos, ...newSnakeBody];\n    this.setState({ partsList: newPartsList });\n    newSnakePartPositions(newPartsList);\n\n    const foodIndex = foodList\n      .findIndex(food => (food.x === newHeadPos.x) && (food.y === newHeadPos.y));\n    if (foodIndex !== -1) this.eat(foodIndex);\n  }\n\n  eat(foodIndex) {\n    const { length: previousLength, speed: previousSpeed } = this.state;\n    const { eat } = this.props;\n    // To avoid extra variables we define the first element as the correct element\n    if (foodIndex !== 0) this.die();\n    this.setState({ length: previousLength + snakeLengthIncrease, speed: previousSpeed + speedIncrement });\n    eat(foodIndex);\n  }\n\n  die() {\n    const { die } = this.props;\n    this.setState({ dead: true });\n    die();\n  }\n\n  render() {\n    const { partsList } = this.state;\n    return partsList.map((part, index) => this.getPartElementByIndex(index));\n  }\n}\n\nSnake.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  boardWidth: PropTypes.number,\n  boardHeight: PropTypes.number,\n  directionVector: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }),\n  die: PropTypes.func,\n  eat: PropTypes.func,\n  newSnakePartPositions: PropTypes.func,\n  foodList: PropTypes.arrayOf(PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n  })),\n};\n\nexport default Snake;","export const boardSize = 15;\r\nexport const snakeInitialSize = 3;\r\nexport const snakeLengthIncrease = 3;\r\nexport const scorePerFood = 10;\r\nexport const initialSpeed = 3; //moves per second\r\nexport const speedIncrement = 0.2;\r\nexport const limitSpeed = 5;","export const symbols = {\n  numbers: ['0️⃣', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣', '9️⃣', '🔟'],\n  animals: ['🐻', '🐎', '🐘', '🐱', '🐦', '🐭'],\n};\n\nexport const words = {\n  english: {\n    code: 'en',\n    numbers: ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'],\n    animals: ['bear', 'horse', 'elephant', 'cat', 'bird', 'mouse'],\n  },\n  german: {\n    code: 'de-DE',\n    numbers: ['null', 'eins', 'zwei', 'drei', 'vier', 'fünf', 'sechs', 'sieben', 'acht', 'neun', 'zehn'],\n    animals: ['Bär', 'Pferd', 'Elefant', 'Katze', 'vogel', 'Maus'],\n  },\n  albanian: {\n    code: 'sq-AL',\n    numbers: ['zero', 'një', 'dy', 'tre', 'katër', 'pesë', 'gjashtë', 'shtatë', 'tetë', 'nëntë', 'dhjetë'],\n    animals: ['ariu', 'kali', 'elefanti', 'mace', 'zog', 'miu'],\n  },\n  greek: {\n    code: 'el-GR',\n    numbers: ['μηδέν', 'ένα', 'δύο', 'τρία', 'τέσσερα', 'πέντε', 'έξι', 'εφτά', 'οχτώ', 'εννιά', 'δέκα'],\n    animals: ['αρκούδα', 'άλογο', 'ελέφαντας', 'γάτα', 'πουλί', 'ποντίκι'],\n  },\n  dutch: {\n    code: 'nl',\n    numbers: ['nul', 'een', 'twee', 'drie', 'vier', 'vijf', 'zes', 'zeven', 'acht', 'negen', 'tien'],\n    animals: ['beer', 'paard', 'olifant', 'kat', 'vogel', 'muis'],\n  },\n  danish: {\n    code: 'da',\n    numbers: ['nul', 'en', 'to', 'tre', 'fire', 'fem', 'seks', 'syv', 'otte', 'ni', 'ti'],\n    animals: ['bjørn', 'hest', 'elefant', 'kat', 'fugl', 'mus'],\n  },\n  polish: {\n    code: 'pl',\n    numbers: ['zero', 'jeden', 'dwa', 'trzy', 'cztery', 'pięć', 'sześć', 'siedem', 'osiem', 'dziewięć', 'dziesięć'],\n    animals: ['niedźwiedź', 'koń', 'słoń', 'kot', 'ptak', 'mysz'],\n  },\n  chinese: {\n    code: 'zh',\n    numbers: ['零', '一', '两个', '三个', '四', '五', '六', '七', '八', '九', '十'],\n    animals: ['熊', '马', '大象', '猫', '鸟', '老鼠'],\n  },\n  turkish: {\n    code: 'tr',\n    numbers: ['sıfır', 'bir', 'iki', 'üç', 'dört', 'beş', 'altı', 'yedi', 'sekiz', 'dokuz', 'on'],\n    animals: ['ayı', 'at', 'fil', 'kedi', 'kuş', 'far'],\n  },\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { symbols } from '../words';\n\nconst FoodTile = styled.div`\n  color: #A46A23;\n  text-shadow: 1px 1px 2px #004200;\n  text-align: center;\n  grid-row-start: ${props => props.x};\n  grid-column-start: ${props => props.y};\n`\n\nfunction Food(props) {\n  const {\n    x, y, subject, wordIndex,\n  } = props;\n  const symbol = symbols[subject][wordIndex];\n\n  return (\n    <FoodTile\n      style={{\n        gridRowStart: y,\n        gridColumnStart: x,\n      }}\n    >\n      {symbol}\n    </FoodTile>\n  );\n}\n\nFood.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  subject: PropTypes.string.isRequired,\n  wordIndex: PropTypes.number.isRequired,\n};\n\nexport default Food;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #0082B4;\n  color: #004200;\n  border-radius: 10px;\n  box-shadow: 5px 5px 15px black, inset 1px 1px 3px white, inset -1px -1px 3px black;\n  padding: 20px;\n`\nconst Message = styled.div``\n\nconst ButtonsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  margin: 10px;\n`\n\nconst Button = styled.button`\n  height: 50px;\n  width: 250px;\n  background-color: #63EC2E;\n  color: #004200;\n  font-family: \"Reggae One\";\n  font-size: 20px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 2px 2px 2px 5px #004200, inset 1px 1px 3px white;\n  border-radius: 10px;\n`\n\nfunction Dialog(props) {\n  const { exit, restart } = props;\n  return (\n    <Container>\n      <Message>\n        Sometimes you win and sometimes you learn.\n      </Message>\n      <ButtonsContainer>\n        <Button onClick={restart}>Play again</Button>\n        <Button onClick={exit}>Back to main Menu</Button>\n      </ButtonsContainer>\n    </Container>\n  );\n}\n\nDialog.propTypes = {\n  exit: PropTypes.func.isRequired,\n  restart: PropTypes.func.isRequired,\n};\n\nexport default Dialog;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Snake from './Snake';\nimport Food from './Food';\nimport Dialog from './Dialog';\nimport { words, symbols } from '../words';\nimport { boardSize, scorePerFood } from '../gameSettings';\n\nconst Container = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  justify-content: space-evenly;\n  flex-direction: row;\n  align-items: center;\n  user-select: none;\n  @media (orientation: portrait) {\n    flex-wrap: wrap;\n  }\n`\n\nconst Board = styled.div`\n  grid-template-rows: repeat(${props => props.size}, 1fr);\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  font-size: ${props => 55 / props.size}vmin;\n  background-color: #FFD489;\n  border: 20px solid #A46A23;\n  border-radius: 20px;\n  width:  calc(90vmin - 30px);\n  height: calc(90vmin - 30px);\n  display: grid;\n  box-shadow: 5px 5px 5px 1px black, inset 1px 1px 10px black;\n`\n\nconst Header = styled.div`\n  display: flex;\n  height: 5vmin;\n  justify-content: space-between;\n`\n\nconst Button = styled.button`\n  background-color: #63EC2E;\n  color: #004200;\n  font-family: \"Reggae One\";\n  font-size: 20px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 2px 2px 2px 5px #004200, inset 1px 1px 3px white;\n  height: 10vmin;\n  width: 10vmin;\n  margin: 10px;\n  text-align: center;\n  border-radius: 20px;\n`\n\nconst LeftControls = styled.div`\n  @media (orientation: portrait) {\n    order: 2;\n  }\n`\n\nconst RightControls = styled.div`\n  @media (orientation: portrait) {\n    order: 3;\n  }\n`\n\nconst GameContainer = styled.div`\n  @media (orientation: portrait) {\n    order: 1;\n  }\n`\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    // TODO remove x y, position should be defined in one place\n    const x = Math.floor(boardSize / 2);\n    const y = Math.floor(boardSize / 2);\n    this.initialState = {\n      foodList: [],\n      snakePositions: [{ x, y }, { x: x + 1, y }, { x: x + 2, y }],\n      directionVector: { x: 0, y: 0 },\n      score: 0,\n      dialog: false,\n      snakeKey: 0,\n    };\n    this.state = this.initialState;\n    this.eatFood = this.eatFood.bind(this);\n    this.generateFood = this.generateFood.bind(this);\n    this.setDirectionVectorFromKeyEvent = this.setDirectionVectorFromKeyEvent.bind(this);\n    this.newSnakePartPositions = (snakePositions) => this.setState({ snakePositions });\n    this.lose = () => this.setState({ dialog: true });\n    this.restart = this.restart.bind(this);\n  }\n\n  componentDidMount() {\n    this.generateFood();\n\n    window.addEventListener('keydown', this.setDirectionVectorFromKeyEvent);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.setDirectionVectorFromKeyEvent);\n  }\n\n  setDirectionVectorFromKeyEvent(event) {\n    const { snakePositions } = this.state;\n    switch (event.key) {\n      case 'ArrowUp':\n        if (snakePositions[0].y - snakePositions[1].y === 1) break;\n        this.setState({ directionVector: { x: 0, y: -1 } });\n        break;\n      case 'ArrowDown':\n        if (snakePositions[0].y - snakePositions[1].y === -1) break;\n        this.setState({ directionVector: { x: 0, y: 1 } });\n        break;\n      case 'ArrowLeft':\n        if (snakePositions[0].x - snakePositions[1].x === 1) break;\n        this.setState({ directionVector: { x: -1, y: 0 } });\n        break;\n      case 'ArrowRight':\n        if (snakePositions[0].x - snakePositions[1].x === -1) break;\n        this.setState({ directionVector: { x: 1, y: 0 } });\n        break;\n      default:\n    }\n  }\n\n  generateFood() {\n    const { foodList, snakePositions } = this.state;\n    const { subject, language } = this.props;\n    const occupiedPositions = [...foodList, ...snakePositions];\n    let positionIsOccupied; let wordAlreadyChosen;\n    const newFoodList = [];\n    for (let i = 0; i < 3; i += 1) {\n      let newFood;\n      do {\n        const x = Math.floor(Math.random() * boardSize + 1);\n        const y = Math.floor(Math.random() * boardSize + 1);\n        positionIsOccupied = occupiedPositions.some(\n          (part) => part.x === x && part.y === y,\n        );\n        newFood = { x, y };\n      } while (positionIsOccupied);\n\n      do {\n        newFood.wordIndex = Math.floor(Math.random() * symbols[subject].length);\n        wordAlreadyChosen = newFoodList.some((word) => word.wordIndex === newFood.wordIndex);\n      } while (wordAlreadyChosen);\n      newFoodList.push(newFood);\n      occupiedPositions.push(newFood);\n    }\n\n    this.setState({ foodList: newFoodList });\n\n    const msg = new SpeechSynthesisUtterance();\n    msg.lang = words[language].code;\n    msg.text = words[language][subject][newFoodList[0].wordIndex];\n    window.speechSynthesis.speak(msg);\n  }\n\n  eatFood() {\n    const { score } = this.state;\n    this.setState({ foodList: [], score: score + scorePerFood });\n    this.generateFood();\n  }\n\n  restart() {\n    const { snakeKey } = this.state;\n    // By changing the key the snakeKey, we force the snake to reset\n    this.setState({ ...this.initialState, snakeKey: snakeKey + 1 });\n    this.generateFood();\n  }\n\n  render() {\n    const {\n      foodList, directionVector, score, dialog, snakeKey,\n    } = this.state;\n    const { language, subject, exit } = this.props;\n    const practiceWord = foodList[0] && words[language][subject][foodList[0].wordIndex];\n\n    return (\n      <Container>\n        {dialog && <Dialog exit={exit} restart={this.restart} />}\n        <LeftControls>\n          <Button onClick={() => this.setDirectionVectorFromKeyEvent({ key: 'ArrowUp' })}>\n            up\n          </Button>\n          <Button onClick={() => this.setDirectionVectorFromKeyEvent({ key: 'ArrowDown' })}>\n            down\n          </Button>\n        </LeftControls>\n        <GameContainer>\n          <Header>\n            <div>Linguaboa</div>\n            <div>{practiceWord}</div>\n            <div>{`Score: ${score}`}</div>\n          </Header>\n          <Board\n            size={boardSize}\n          >\n            <Snake\n              x={Math.floor(boardSize / 2)}\n              y={Math.floor(boardSize / 2)}\n              newSnakePartPositions={this.newSnakePartPositions}\n              foodList={foodList}\n              eat={this.eatFood}\n              die={this.lose}\n              boardWidth={boardSize}\n              boardHeight={boardSize}\n              directionVector={directionVector}\n              key={snakeKey}\n            />\n            {\n              foodList.map((food) => (\n                <Food\n                  x={food.x}\n                  y={food.y}\n                  key={`${food.x}-${food.y}`}\n                  subject={subject}\n                  wordIndex={food.wordIndex}\n                />\n              ))\n            }\n          </Board>\n        </GameContainer>\n        <RightControls>\n          <Button onClick={() => this.setDirectionVectorFromKeyEvent({ key: 'ArrowLeft' })}>\n            left\n          </Button>\n          <Button onClick={() => this.setDirectionVectorFromKeyEvent({ key: 'ArrowRight' })}>\n            right\n          </Button>\n        </RightControls>\n      </Container>\n    );\n  }\n}\n\nGame.propTypes = {\n  subject: PropTypes.string.isRequired,\n  language: PropTypes.string.isRequired,\n  exit: PropTypes.func.isRequired,\n};\n\nexport default Game;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { words, symbols } from '../words';\n\nconst Container = styled.div`\n  background-color: #0082B4;\n  border-radius: 5px;\n  box-shadow: 5px 5px 5px 1px black,\n    inset -1px -1px 5px black,\n    inset 1px 1px 5px white;\n`\n\nconst Title = styled.h1`\n  text-shadow: 5px 5px #004200;\n  width: 100%;\n  text-align: center;\n`\n\nconst Options = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 50px;\n  padding-top: 0;\n`\n\nconst Dropdown = styled.label`\n  padding: 20px;\n`\n\nconst PlayBtn = styled.input`\n  height: 100px;\n  width: 300px;\n  background-color: #63EC2E;\n  color: #004200;\n  font-family: \"Reggae One\";\n  font-size: 60px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 2px 2px 2px 5px #004200, inset 1px 1px 3px white;\n  border-radius: 10px;\n`\n\nfunction Menu(props) {\n  const languages = Object.keys(words);\n  const subjects = Object.keys(symbols);\n\n  const { setLanguage, setSubject, play, language, subject } = props;\n\n  return (\n    <Container>\n      <Title>LinguaBoa</Title>\n      <Options>\n        <Dropdown htmlFor=\"language-select\">\n          Language:\n          <select\n            id=\"language-select\"\n            value={language}\n            onChange={(event) => setLanguage(event.target.value)}\n          >\n            {\n              languages.map((languageItem) => (\n                <option\n                  value={languageItem}\n                  key={languageItem}\n                >\n                  {languageItem}\n                </option>\n              ))\n            }\n          </select>\n        </Dropdown>\n        <Dropdown htmlFor=\"subject-select\">\n          Subject:\n          <select\n            id=\"subject-select\"\n            value={subject}\n            onChange={(event) => setSubject(event.target.value)}\n          >\n            {subjects.map((subjectItem) => (\n              <option\n                value={subjectItem}\n                key={subjectItem}\n              >\n                {subjectItem}\n              </option>\n            ))}\n          </select>\n        </Dropdown>\n        <PlayBtn type=\"button\" value=\"PLAY\" onClick={play} />\n      </Options>\n    </Container>\n  );\n}\n\nexport default Menu;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Game from './components/Game';\nimport Menu from './components/Menu';\nimport { words, symbols } from './words';\nimport '@fontsource/reggae-one';\n\nconst Application = styled.div`\n  background-color: #161E11;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: #63EC2E;\n  font-family: \"Reggae One\";\n`\n\nfunction App() {\n  const [language, setLanguage] = useState(Object.keys(words)[0]);\n  const [subject, setSubject] = useState(Object.keys(symbols)[0]);\n  const [screen, setScreen] = useState('menu');\n\n  const getScreen = () => {\n    switch (screen) {\n      case 'game':\n        return (\n          <Game\n            language={language}\n            subject={subject}\n            exit={() => setScreen('menu')}\n          />\n        );\n      case 'menu':\n      default:\n        return (\n          <Menu\n            language={language}\n            setLanguage={setLanguage}\n            subject={subject}\n            setSubject={setSubject}\n            play={() => setScreen('game')}\n          />\n        );\n    }\n  };\n\n  return (\n    <Application>\n      {getScreen()}\n    </Application>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}