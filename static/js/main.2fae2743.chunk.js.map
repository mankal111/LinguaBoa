{"version":3,"sources":["components/SnakePart.js","components/Snake.js","gameSettings.js","words.js","components/Food.js","components/Game.js","components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["SnakePart","this","props","x","y","type","from","to","directionStyle","style","gridRowStart","gridColumnStart","className","React","Component","Snake","state","partsList","length","exit","speed","update","bind","move","die","eat","now","before","animationID","window","requestAnimationFrame","cancelAnimationFrame","fromCoordinates","toCoordinates","fromX","fromY","xDiff","yDiff","index","coordinates","prevCoordinates","undefined","nextCoordinates","getDirectionFromCoordinates","key","foodList","newSnakePartPositions","boardWidth","boardHeight","directionVector","oldHeadPos","newHeadPos","ateOwnPart","some","part","outsideBoard","newSnakeBody","slice","setState","foodIndex","findIndex","food","previousLength","previousSpeed","map","getPartElementByIndex","symbols","numbers","animals","words","english","code","german","albanian","greek","dutch","danish","polish","chinese","turkish","subject","wordIndex","Game","Math","floor","boardSize","snakePositions","score","eatFood","generateFood","setDirectionVectorFromKeyEvent","event","addEventListener","removeEventListener","newFood","positionIsOccupied","wordAlreadyChosen","language","occupiedPositions","newFoodList","i","random","word","push","msg","SpeechSynthesisUtterance","lang","text","speechSynthesis","speak","practiceWord","onClick","clickControl","gridTemplateRows","gridTemplateColumns","fontSize","Menu","languages","Object","keys","subjects","setLanguage","setSubject","play","value","onChange","target","App","useState","screen","setScreen","getScreen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oVAIqBA,G,mLACP,IAAD,EAC0BC,KAAKC,MAA7BC,EADF,EACEA,EAAGC,EADL,EACKA,EAAGC,EADR,EACQA,KAAMC,EADd,EACcA,KAAMC,EADpB,EACoBA,GACnBC,EAAc,UAAMF,EAAI,0BAAsBA,EAAtB,KAAgC,IAA1C,OAA+CC,EAAE,wBAAoBA,GAAO,IAChG,OAAO,yBACHE,MAAO,CACHC,aAAcN,EACdO,gBAAiBR,GAErBS,UAAS,gCAA2BP,EAA3B,YAAmCG,S,GATjBK,IAAMC,YCCxBC,E,kDACjB,WAAYb,GAAQ,IAAD,6BACf,cAAMA,IACcA,MAAbC,EAFQ,EAERA,EAAGC,EAFK,EAELA,EAFK,OAGf,EAAKY,MAAQ,CACTC,UAAW,CACP,CAACd,IAAGC,KACJ,CAACD,EAAGA,EAAE,EAAGC,KACT,CAACD,EAAGA,EAAE,EAAGC,MAEbc,OCdoB,EDepBC,MAAM,EACNC,MCbgB,GDepB,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,KAAO,EAAKA,KAAKD,KAAV,gBACZ,EAAKE,IAAM,EAAKA,IAAIF,KAAT,gBACX,EAAKG,IAAM,EAAKA,IAAIH,KAAT,gBAhBI,E,mDAmBZI,GAAM,IACDN,EAAUnB,KAAKe,MAAfI,MACJM,EAAMzB,KAAK0B,OAAS,IAAOP,IAC3BnB,KAAKsB,OACLtB,KAAK0B,OAASD,GAGlB,IAAME,EAAcC,OAAOC,sBAAsB7B,KAAKoB,QAClDpB,KAAKe,MAAMG,MAAMU,OAAOE,qBAAqBH,K,0CAIjD3B,KAAK0B,OAAS,EACdE,OAAOC,sBAAsB7B,KAAKoB,U,kDAGVW,EAAiBC,GACzC,GAAKD,GAAoBC,EAAzB,CADwD,IAE7CC,EAAoBF,EAAvB7B,EAAagC,EAAUH,EAAb5B,EAEXgC,EAAiBF,EADGD,EAAnB9B,EACMkC,EAAqBF,EADRF,EAAX7B,EAEhB,GAAc,IAAViC,EAAa,CACb,GAAc,IAAVD,EAAa,MAAO,OACxB,IAAe,IAAXA,EAAc,MAAO,QAE7B,GAAc,IAAVA,EAAa,CACb,GAAc,IAAVC,EAAa,MAAO,KACxB,IAAe,IAAXA,EAAc,MAAO,W,4CAIXC,GAAQ,IAClBrB,EAAchB,KAAKe,MAAnBC,UACFsB,EAActB,EAAUqB,GACxBjC,EAAiB,IAAViC,EAAc,OAAUA,IAAUrB,EAAUC,OAAS,EAAI,OAAS,SACzEsB,EAA2B,SAATnC,OAAkBoC,EAAYxB,EAAUqB,EAAQ,GAClEI,EAA2B,SAATrC,OAAkBoC,EAAYxB,EAAUqB,EAAQ,GACxE,OAAO,kBAAC,EAAD,CACHnC,EAAGoC,EAAYpC,EACfC,EAAGmC,EAAYnC,EACfC,KAAMA,EACNC,KAAML,KAAK0C,4BAA4BJ,EAAaC,GACpDjC,GAAIN,KAAK0C,4BAA4BJ,EAAaG,GAClDE,IAAG,UAAKL,EAAYpC,EAAjB,YAAsBoC,EAAYnC,O,6BAIrC,IAAD,EAC2BH,KAAKe,MAA3BC,EADL,EACKA,UAAWC,EADhB,EACgBA,OADhB,EAEmFjB,KAAKC,MAAnF2C,EAFL,EAEKA,SAAUC,EAFf,EAEeA,sBAAuBC,EAFtC,EAEsCA,WAAYC,EAFlD,EAEkDA,YAAaC,EAF/D,EAE+DA,gBAClE,GAA0B,IAAtBA,EAAgB9C,GAAiC,IAAtB8C,EAAgB7C,EAA/C,CAEA,IAAM8C,EAAajC,EAAU,GACvBkC,EAAa,CACfhD,EAAG+C,EAAW/C,EAAI8C,EAAgB9C,EAClCC,EAAG8C,EAAW9C,EAAI6C,EAAgB7C,GAGhCgD,EAAanC,EAAUoC,MACzB,SAAAC,GAAI,OAAIA,EAAKnD,IAAMgD,EAAWhD,GAAKmD,EAAKlD,IAAM+C,EAAW/C,KAEvDmD,EAAeJ,EAAWhD,GAAK,GAAKgD,EAAWhD,EAAI4C,GACrDI,EAAW/C,GAAK,GAAK+C,EAAW/C,EAAI4C,EAExC,GAAII,GAAcG,EACdtD,KAAKuB,UADT,CAKA,IACMgC,EADatC,EAASD,EAAUC,OACJD,EAAYA,EAAUwC,MAAM,GAAI,GAClExD,KAAKyD,SAAS,CAAEzC,UAAU,CAAEkC,GAAH,mBAAkBK,MAC3CV,EAAsB7B,GAEtB,IAAM0C,EAAYd,EACbe,WAAU,SAAAC,GAAI,OAAKA,EAAK1D,IAAMgD,EAAWhD,GAAO0D,EAAKzD,IAAM+C,EAAW/C,MACxD,IAAfuD,GAAkB1D,KAAKwB,IAAIkC,O,0BAG/BA,GAAY,IAAD,EAC8C1D,KAAKe,MAA9C8C,EADL,EACH5C,OAA+B6C,EAD5B,EACqB3C,MAEd,IAAduC,GAAiB1D,KAAKuB,MAC1BvB,KAAKyD,SAAS,CAACxC,OAAQ4C,EC1GI,ED0GkC1C,MAAO2C,ECvG9C,KDwGtB9D,KAAKC,MAAMuB,IAAIkC,K,4BAIf1D,KAAKyD,SAAS,CAACvC,MAAM,IACrBlB,KAAKC,MAAMsB,Q,+BAGL,IAAD,SACUvB,KAAKC,MADf,EACEC,EADF,EACKC,EAEV,OADoBH,KAAKe,MAAlBC,UACU+C,KAAI,SAACV,EAAMhB,GAAP,OAAiB,EAAK2B,sBAAsB3B,U,GAnHtCzB,IAAMC,WEL5BoD,G,MAAU,CACnBC,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC5DC,QAAS,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,kBAG/BC,EAAQ,CACjBC,QAAS,CACLC,KAAM,KACNJ,QAAS,CAAC,OAAQ,MAAO,MAAO,QAAS,OAAQ,OAAQ,MAAO,QAAS,QAAS,OAAQ,OAC1FC,QAAS,CAAC,OAAQ,QAAS,WAAY,MAAO,OAAQ,UAE1DI,OAAQ,CACJD,KAAM,QACNJ,QAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UAAQ,QAAS,SAAU,OAAQ,OAAQ,QAC7FC,QAAS,CAAC,SAAO,QAAS,UAAW,QAAS,QAAS,SAE3DK,SAAU,CACNF,KAAM,QACNJ,QAAS,CAAC,OAAQ,SAAO,KAAM,MAAO,WAAS,UAAQ,aAAW,YAAU,UAAQ,cAAS,aAC7FC,QAAS,CAAC,OAAQ,OAAQ,WAAY,OAAQ,MAAO,QAEzDM,MAAO,CACHH,KAAM,QACNJ,QAAS,CAAC,iCAAS,qBAAO,qBAAO,2BAAQ,6CAAW,iCAAS,qBAAO,2BAAQ,2BAAQ,iCAAS,4BAC7FC,QAAS,CAAC,6CAAW,iCAAS,yDAAa,2BAAQ,iCAAS,+CAEhEO,MAAO,CACHJ,KAAM,KACNJ,QAAS,CAAC,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,QAAS,OAAQ,QAAS,QACzFC,QAAS,CAAC,OAAQ,QAAS,UAAW,MAAO,QAAS,SAE1DQ,OAAQ,CACJL,KAAM,KACNJ,QAAS,CAAC,MAAO,KAAM,KAAM,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAAQ,KAAM,MAChFC,QAAS,CAAC,WAAS,OAAQ,UAAW,MAAO,OAAQ,QAEzDS,OAAQ,CACJN,KAAM,KACNJ,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,SAAU,iBAAQ,kBAAS,SAAU,QAAS,qBAAY,sBACpGC,QAAS,CAAC,uBAAc,WAAO,iBAAQ,MAAO,OAAQ,SAE1DU,QAAS,CACLP,KAAM,KACNJ,QAAS,CAAC,SAAK,SAAK,eAAM,eAAM,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAC9DC,QAAS,CAAC,SAAK,SAAK,eAAM,SAAK,SAAK,iBAExCW,QAAS,CACLR,KAAM,KACNJ,QAAS,CAAC,kBAAS,MAAO,MAAO,WAAM,UAAQ,WAAO,YAAQ,OAAQ,QAAS,QAAS,MACxFC,QAAS,CAAC,WAAO,KAAM,MAAO,OAAQ,WAAO,SC5ChCpE,E,uKAEP,IAAD,EACmBC,KAAKC,MAAtBC,EADF,EACEA,EAAGC,EADL,EACKA,EAAG4E,EADR,EACQA,QACb,OAAO,yBACHvE,MAAO,CACHC,aAAcN,EACdO,gBAAiBR,GAErBS,UAAS,QAERsD,EAAQc,GAAS/E,KAAKC,MAAM+E,gB,GAXFpE,IAAMC,WCExBoE,E,kDACjB,WAAYhF,GAAQ,IAAD,EAGXC,EAAGC,EAHQ,2BACf,cAAMF,GAGNC,EAAIC,EAAI+E,KAAKC,MAAMC,GACnB,EAAKrE,MAAQ,CACT6B,SAAU,GACVyC,eAAgB,CAAC,CAACnF,IAAGC,KAAI,CAACD,EAAGA,EAAE,EAAGC,KAAI,CAACD,EAAGA,EAAE,EAAGC,MAC/C6C,gBAAiB,CAAC9C,EAAG,EAAGC,EAAG,GAC3BmF,MAAO,GAEX,EAAKC,QAAU,EAAKA,QAAQlE,KAAb,gBACf,EAAKmE,aAAe,EAAKA,aAAanE,KAAlB,gBACpB,EAAKoE,+BAAiC,EAAKA,+BAA+BpE,KAApC,gBACtC,EAAKwB,sBACD,SAAAwC,GAAc,OAAI,EAAK5B,SAAS,CAAE4B,oBAfvB,E,2EAkBYK,GAAQ,IAC3BL,EAAmBrF,KAAKe,MAAxBsE,eACJ,OAAQK,EAAM/C,KACV,IAAK,UACD,GAAI0C,EAAe,GAAGlF,EAAIkF,EAAe,GAAGlF,IAAM,EAAG,MACrDH,KAAKyD,SAAS,CAACT,gBAAiB,CAAE9C,EAAG,EAAGC,GAAI,KAC5C,MACJ,IAAK,YACD,GAAIkF,EAAe,GAAGlF,EAAIkF,EAAe,GAAGlF,KAAO,EAAG,MACtDH,KAAKyD,SAAS,CAACT,gBAAiB,CAAE9C,EAAG,EAAGC,EAAG,KAC3C,MACJ,IAAK,YACD,GAAIkF,EAAe,GAAGnF,EAAImF,EAAe,GAAGnF,IAAM,EAAG,MACrDF,KAAKyD,SAAS,CAACT,gBAAiB,CAAE9C,GAAI,EAAGC,EAAG,KAC5C,MACJ,IAAK,aACD,GAAIkF,EAAe,GAAGnF,EAAImF,EAAe,GAAGnF,KAAO,EAAG,MACtDF,KAAKyD,SAAS,CAACT,gBAAiB,CAAE9C,EAAG,EAAGC,EAAG,Q,0CAMvDH,KAAKwF,eAEL5D,OAAO+D,iBAAiB,UAAW3F,KAAKyF,kC,6CAIxC7D,OAAOgE,oBAAoB,UAAW5F,KAAKyF,kC,qCAQ3C,IALY,IAIRI,EAASC,EAAoBC,EAJtB,EAC0B/F,KAAKe,MAAlC6B,EADG,EACHA,SAAUyC,EADP,EACOA,eADP,EAEmBrF,KAAKC,MAA3B8E,EAFG,EAEHA,QAASiB,EAFN,EAEMA,SACXC,EAAiB,sBAAQrD,GAAR,YAAqByC,IACQa,EAAc,GAC1DC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,GACIN,EAAU,CACN3F,EAAGgF,KAAKC,MHlEH,GGkESD,KAAKkB,SAAuB,GAC1CjG,EAAG+E,KAAKC,MHnEH,GGmESD,KAAKkB,SAAuB,IAE9CN,EAAqBG,EAAkB7C,MACnC,SAAAC,GAAI,OAAIA,EAAKnD,IAAM2F,EAAQ3F,GAAKmD,EAAKlD,IAAM0F,EAAQ1F,WAEnD2F,GAER,GACID,EAAQb,UAAYE,KAAKC,MAAMD,KAAKkB,SAAWnC,EAAQc,GAAS9D,QAChE8E,EAAoBG,EAAY9C,MAAK,SAAAiD,GAAI,OAAIA,EAAKrB,YAAca,EAAQb,mBACpEe,GACRG,EAAYI,KAAKT,GACjBI,EAAkBK,KAAKT,GAE3B7F,KAAKyD,SAAS,CAAEb,SAAUsD,IAC1B,IAAIK,EAAM,IAAIC,yBACdD,EAAIE,KAAOrC,EAAM4B,GAAU1B,KAC3BiC,EAAIG,KAAOtC,EAAM4B,GAAUjB,GAASmB,EAAY,GAAGlB,WACnDpD,OAAO+E,gBAAgBC,MAAML,K,gCAGtB,IACCjB,EAAUtF,KAAKe,MAAfuE,MACRtF,KAAKyD,SAAS,CAAEb,SAAU,GAAI0C,MAAOA,EHvFjB,KGwFpBtF,KAAKwF,iB,+BAGC,IAAD,SACuCxF,KAAKe,MAAzC6B,EADH,EACGA,SAAUI,EADb,EACaA,gBAAiBsC,EAD9B,EAC8BA,MAD9B,EAE+BtF,KAAKC,MAAjC+F,EAFH,EAEGA,SAAUjB,EAFb,EAEaA,QAAS7D,EAFtB,EAEsBA,KACrB2F,EAAejE,EAAS,IAAMwB,EAAM4B,GAAUjB,GAASnC,EAAS,GAAGoC,WAEzE,OAAO,yBAAKrE,UAAU,kBAClB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YAAYmG,QAAS,kBAAM,EAAKrB,+BAA+B,CAAC9C,IAAK,cAApF,MACA,yBAAKhC,UAAU,cAAcmG,QAAS,kBAAM,EAAKrB,+BAA+B,CAAC9C,IAAK,gBAAtF,SAEJ,yBAAKhC,UAAU,UACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,SAAf,aACA,yBAAKA,UAAU,iBAAiBkG,GAChC,yBAAKlG,UAAU,SAAf,iBAAkC2E,KAEtC,yBACI3E,UAAU,QACVmG,QAAS9G,KAAK+G,aACdvG,MAAO,CACHwG,iBAAiB,UAAD,OHlHf,GGkHe,UAChBC,oBAAoB,UAAD,OHnHlB,GGmHkB,UACnBC,SAAS,GAAD,OAAK,GHpHZ,GGoHO,UAGZ,kBAAC,EAAD,CACIhH,EAAGgF,KAAKC,MAAMC,GAAcjF,EAAG+E,KAAKC,MAAMC,GAC1CvC,sBAAuB7C,KAAK6C,sBAC5BD,SAAUA,EACVpB,IAAKxB,KAAKuF,QACVhE,IAAKL,EACL4B,WH7HC,GG8HDC,YH9HC,GG+HDC,gBAAiBA,IAEpBJ,EAASmB,KACN,SAAAH,GAAI,OACA,kBAAC,EAAD,CACI1D,EAAG0D,EAAK1D,EAAGC,EAAGyD,EAAKzD,EACnBwC,IAAG,UAAKiB,EAAK1D,EAAV,YAAe0D,EAAKzD,GACvB6F,SAAUA,EACVjB,QAASA,EACTC,UAAWpB,EAAKoB,iBAMpC,yBAAKrE,UAAU,cACX,yBAAKA,UAAU,cAAcmG,QAAS,kBAAM,EAAKrB,+BAA+B,CAAC9C,IAAK,gBAAtF,QACA,yBAAKhC,UAAU,eAAemG,QAAS,kBAAM,EAAKrB,+BAA+B,CAAC9C,IAAK,iBAAvF,e,GAzIkB/B,IAAMC,WCuBvBsG,MA3BjB,SAAclH,GACV,IAAMmH,EAAYC,OAAOC,KAAKlD,GACxBmD,EAAWF,OAAOC,KAAKrD,GAErBuD,EAAoDvH,EAApDuH,YAAaC,EAAuCxH,EAAvCwH,WAAYC,EAA2BzH,EAA3ByH,KAAM1B,EAAqB/F,EAArB+F,SAAUjB,EAAW9E,EAAX8E,QAEjD,OACI,yBAAKpE,UAAU,QACX,8BACI,2CAEI,4BAAQgH,MAAO3B,EAAU4B,SAAU,SAAAlC,GAAK,OAAI8B,EAAY9B,EAAMmC,OAAOF,SAChEP,EAAUrD,KAAI,SAAAiC,GAAQ,OAAI,4BAAQ2B,MAAO3B,EAAUrD,IAAKqD,GAAWA,QAG5E,0CAEI,4BAAQ2B,MAAO5C,EAAS6C,SAAU,SAAAlC,GAAK,OAAI+B,EAAW/B,EAAMmC,OAAOF,SAC9DJ,EAASxD,KAAI,SAAAgB,GAAO,OAAI,4BAAQ4C,MAAO5C,EAASpC,IAAKoC,GAAUA,QAGxE,2BAAO3E,KAAK,SAASuH,MAAM,OAAQb,QAASY,O,MCa7CI,MA/Bf,WAAgB,IAAD,EACmBC,mBAASV,OAAOC,KAAKlD,GAAO,IAD/C,mBACN4B,EADM,KACIwB,EADJ,OAEiBO,mBAASV,OAAOC,KAAKrD,GAAS,IAF/C,mBAENc,EAFM,KAEG0C,EAFH,OAGeM,mBAAS,QAHxB,mBAGNC,EAHM,KAGEC,EAHF,KAwBb,OACE,yBAAKtH,UAAU,OApBC,WAChB,OAAOqH,GACL,IAAK,OACH,OAAO,kBAAC,EAAD,CACLhC,SAAUA,EACVwB,YAAaA,EACbzC,QAASA,EACT0C,WAAYA,EACZC,KAAM,kBAAMO,EAAU,WAE1B,IAAK,OACH,OAAO,kBAAC,EAAD,CACLjC,SAAUA,EACVjB,QAASA,EACT7D,KAAM,kBAAM+G,EAAU,YAOzBC,KCpBaC,QACW,cAA7BvG,OAAOwG,SAASC,UAEe,UAA7BzG,OAAOwG,SAASC,UAEhBzG,OAAOwG,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2fae2743.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./SnakePart.css\";\r\n\r\nexport default class SnakePart extends React.Component {\r\n    render() {\r\n        const {x, y, type, from, to} = this.props;\r\n        const directionStyle = `${from ? `snake-part-from-${from} ` : ''}${to ? `snake-part-to-${to}` : ''}`\r\n        return <div\r\n            style={{\r\n                gridRowStart: y,\r\n                gridColumnStart: x\r\n            }}\r\n            className={`snake-part snake-part-${type} ${directionStyle}`}\r\n        >\r\n        </div>;\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SnakePart from \"./SnakePart.js\";\r\nimport { snakeInitialSize, snakeLengthIncrease, initialSpeed, speedIncrement } from \"../gameSettings\";\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {x, y} = this.props;\r\n        this.state = {\r\n            partsList: [\r\n                {x, y},\r\n                {x: x+1, y},\r\n                {x: x+2, y}\r\n            ],\r\n            length: snakeInitialSize,\r\n            exit: false,\r\n            speed: initialSpeed,\r\n        }\r\n        this.update = this.update.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.die = this.die.bind(this);\r\n        this.eat = this.eat.bind(this);\r\n    }\r\n\r\n    update(now) {\r\n        const { speed } = this.state;\r\n        if (now - this.before > 1000 / speed) {\r\n            this.move();\r\n            this.before = now;\r\n        }\r\n\r\n        const animationID = window.requestAnimationFrame(this.update); \r\n        if (this.state.exit) window.cancelAnimationFrame(animationID);\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.before = 0;\r\n        window.requestAnimationFrame(this.update);\r\n    }\r\n\r\n    getDirectionFromCoordinates(fromCoordinates, toCoordinates) {\r\n        if (!fromCoordinates || !toCoordinates) return\r\n        const { x: fromX, y: fromY } = fromCoordinates;\r\n        const { x: toX, y: toY } = toCoordinates;\r\n        const [xDiff, yDiff] = [fromX-toX, fromY-toY];\r\n        if (yDiff === 0) {\r\n            if (xDiff === 1) return 'left';\r\n            if (xDiff === -1) return 'right';\r\n        }\r\n        if (xDiff === 0) {\r\n            if (yDiff === 1) return 'up';\r\n            if (yDiff === -1) return 'down';\r\n        }\r\n    }\r\n\r\n    getPartElementByIndex(index) {\r\n        const { partsList } = this.state;\r\n        const coordinates = partsList[index];\r\n        const type = index === 0 ? 'head' : (index === partsList.length - 1 ? 'tail' : 'middle');\r\n        const prevCoordinates = type === 'tail' ? undefined : partsList[index + 1];\r\n        const nextCoordinates = type === 'head' ? undefined : partsList[index - 1];\r\n        return <SnakePart  \r\n            x={coordinates.x}\r\n            y={coordinates.y}\r\n            type={type}\r\n            from={this.getDirectionFromCoordinates(coordinates, prevCoordinates)}\r\n            to={this.getDirectionFromCoordinates(coordinates, nextCoordinates)}\r\n            key={`${coordinates.x}-${coordinates.y}`}\r\n        />\r\n    }\r\n\r\n    move() {\r\n        const { partsList, length } = this.state;\r\n        const { foodList, newSnakePartPositions, boardWidth, boardHeight, directionVector } = this.props;\r\n        if (directionVector.x === 0 && directionVector.y === 0) return;\r\n\r\n        const oldHeadPos = partsList[0];\r\n        const newHeadPos = {\r\n            x: oldHeadPos.x + directionVector.x,\r\n            y: oldHeadPos.y + directionVector.y,\r\n        }\r\n\r\n        const ateOwnPart = partsList.some(\r\n            part => part.x === newHeadPos.x && part.y === newHeadPos.y\r\n        );\r\n        const outsideBoard = newHeadPos.x <= 0 || newHeadPos.x > boardWidth ||\r\n            newHeadPos.y <= 0 || newHeadPos.y > boardHeight;\r\n\r\n        if (ateOwnPart || outsideBoard) {\r\n            this.die();\r\n            return;\r\n        }\r\n\r\n        const shouldGrow = length > partsList.length;\r\n        const newSnakeBody = shouldGrow ? partsList : partsList.slice(0, -1);\r\n        this.setState({ partsList: [newHeadPos, ...newSnakeBody] });\r\n        newSnakePartPositions(partsList);\r\n\r\n        const foodIndex = foodList\r\n            .findIndex(food => (food.x === newHeadPos.x) && (food.y === newHeadPos.y));\r\n        if (foodIndex !== -1) this.eat(foodIndex);\r\n    }\r\n\r\n    eat(foodIndex) {\r\n        const { length: previousLength, speed: previousSpeed } = this.state;\r\n        // To avoid extra variables we define the first element as the correct element\r\n        if (foodIndex !== 0) this.die();\r\n        this.setState({length: previousLength + snakeLengthIncrease, speed: previousSpeed + speedIncrement});\r\n        this.props.eat(foodIndex);\r\n    }\r\n\r\n    die() {\r\n        this.setState({exit: true});\r\n        this.props.die();\r\n    }\r\n\r\n    render() {\r\n        const {x, y} = this.props;\r\n        const {partsList} = this.state;\r\n        return partsList.map((part, index) => this.getPartElementByIndex(index));\r\n    }\r\n}","export const boardSize = 12;\r\nexport const snakeInitialSize = 3;\r\nexport const snakeLengthIncrease = 3;\r\nexport const scorePerFood = 10;\r\nexport const initialSpeed = 2; //moves per second\r\nexport const speedIncrement = 0.5;\r\nexport const limitSpeed = 5;","export const symbols = {\r\n    numbers: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n    animals: ['🐻', '🐎', '🐘', '🐱', '🐦', '🐭']\r\n}\r\n\r\nexport const words = {\r\n    english: {\r\n        code: 'en',\r\n        numbers: ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'],\r\n        animals: ['bear', 'horse', 'elephant', 'cat', 'bird', 'mouse'],\r\n    },\r\n    german: {\r\n        code: 'de-DE',\r\n        numbers: ['null', 'eins', 'zwei', 'drei', 'vier', 'fünf', 'sechs', 'sieben', 'acht', 'neun', 'zehn'],\r\n        animals: [\"Bär\", \"Pferd\", \"Elefant\", \"Katze\", 'vogel', \"Maus\"],\r\n    },\r\n    albanian: {\r\n        code: 'sq-AL',\r\n        numbers: ['zero', 'një', 'dy', 'tre', 'katër', 'pesë', 'gjashtë', 'shtatë', 'tetë', 'nëntë', 'dhjetë'],\r\n        animals: ['ariu', 'kali', 'elefanti', 'mace', 'zog', 'miu'],\r\n    },\r\n    greek: {\r\n        code: 'el-GR',\r\n        numbers: ['μηδέν', 'ένα', 'δύο', 'τρία', 'τέσσερα', 'πέντε', 'έξι', 'εφτά', 'οχτώ', 'εννιά', 'δέκα'],\r\n        animals: ['αρκούδα', 'άλογο', 'ελέφαντας', 'γάτα', 'πουλί', 'ποντίκι'],\r\n    },\r\n    dutch: {\r\n        code: 'nl',\r\n        numbers: ['nul', 'een', 'twee', 'drie', 'vier', 'vijf', 'zes', 'zeven', 'acht', 'negen', 'tien'],\r\n        animals: ['beer', 'paard', 'olifant', 'kat', 'vogel', 'muis'],\r\n    },\r\n    danish: {\r\n        code: 'da',\r\n        numbers: ['nul', 'en', 'to', 'tre', 'fire', 'fem', 'seks', 'syv', 'otte', 'ni', 'ti'],\r\n        animals: ['bjørn', 'hest', 'elefant', 'kat', 'fugl', 'mus'],\r\n    },\r\n    polish: {\r\n        code: 'pl',\r\n        numbers: ['zero', 'jeden', 'dwa', 'trzy', 'cztery', 'pięć', 'sześć', 'siedem', 'osiem', 'dziewięć', 'dziesięć'],\r\n        animals: ['niedźwiedź', 'koń', 'słoń', 'kot', 'ptak', 'mysz'],\r\n    },\r\n    chinese: {\r\n        code: 'zh',\r\n        numbers: ['零', '一', '两个', '三个', '四', '五', '六', '七', '八', '九', '十'], \r\n        animals: ['熊', '马', '大象', '猫', '鸟', '老鼠'], \r\n    },\r\n    turkish: {\r\n        code: 'tr',\r\n        numbers: ['sıfır', 'bir', 'iki', 'üç', 'dört', 'beş', 'altı', 'yedi', 'sekiz', 'dokuz', 'on'],\r\n        animals: ['ayı', 'at', 'fil', 'kedi', 'kuş', 'far'],\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Food.css\";\r\nimport { symbols } from \"../words\";\r\n\r\nexport default class SnakePart extends React.Component {\r\n\r\n    render() {\r\n        const {x, y, subject} = this.props;\r\n        return <div\r\n            style={{\r\n                gridRowStart: y,\r\n                gridColumnStart: x\r\n            }}\r\n            className={`food`}\r\n        >\r\n            {symbols[subject][this.props.wordIndex]}\r\n        </div>;\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Game.css\";\r\nimport Snake from \"./Snake.js\"\r\nimport Food from \"./Food\";\r\nimport { words, symbols } from \"../words\";\r\nimport { boardSize, scorePerFood } from \"../gameSettings\";\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // TODO remove x y, position should be defined in one place\r\n        let x, y;\r\n        x = y = Math.floor(boardSize/2);\r\n        this.state = {\r\n            foodList: [],\r\n            snakePositions: [{x, y}, {x: x+1, y}, {x: x+2, y}],\r\n            directionVector: {x: 0, y: 0},\r\n            score: 0,\r\n        }\r\n        this.eatFood = this.eatFood.bind(this);\r\n        this.generateFood = this.generateFood.bind(this);\r\n        this.setDirectionVectorFromKeyEvent = this.setDirectionVectorFromKeyEvent.bind(this);\r\n        this.newSnakePartPositions =\r\n            snakePositions => this.setState({ snakePositions });\r\n    }\r\n\r\n    setDirectionVectorFromKeyEvent(event) {\r\n        const { snakePositions } = this.state;\r\n            switch (event.key) {\r\n                case 'ArrowUp':\r\n                    if (snakePositions[0].y - snakePositions[1].y === 1) break;\r\n                    this.setState({directionVector: { x: 0, y: -1}});\r\n                    break;\r\n                case 'ArrowDown':\r\n                    if (snakePositions[0].y - snakePositions[1].y === -1) break;\r\n                    this.setState({directionVector: { x: 0, y: 1}});\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    if (snakePositions[0].x - snakePositions[1].x === 1) break;\r\n                    this.setState({directionVector: { x: -1, y: 0}});\r\n                    break;\r\n                case 'ArrowRight':\r\n                    if (snakePositions[0].x - snakePositions[1].x === -1) break;\r\n                    this.setState({directionVector: { x: 1, y: 0}});\r\n                    break;\r\n            }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.generateFood();\r\n\r\n        window.addEventListener('keydown', this.setDirectionVectorFromKeyEvent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.setDirectionVectorFromKeyEvent);\r\n    }\r\n\r\n    generateFood() {\r\n        const { foodList, snakePositions } = this.state;\r\n        const { subject, language } = this.props;\r\n        const occupiedPositions = [ ...foodList, ...snakePositions ];\r\n        let newFood, positionIsOccupied, wordAlreadyChosen, newFoodList = [];\r\n        for(let i = 0; i < 3; i++) {\r\n            do {\r\n                newFood = {\r\n                    x: Math.floor(Math.random() * boardSize + 1),\r\n                    y: Math.floor(Math.random() * boardSize + 1),\r\n                }\r\n                positionIsOccupied = occupiedPositions.some(\r\n                    part => part.x === newFood.x && part.y === newFood.y\r\n                );\r\n            } while(positionIsOccupied);\r\n\r\n            do {\r\n                newFood.wordIndex = Math.floor(Math.random() * symbols[subject].length);\r\n                wordAlreadyChosen = newFoodList.some(word => word.wordIndex === newFood.wordIndex);\r\n            } while(wordAlreadyChosen);\r\n            newFoodList.push(newFood);\r\n            occupiedPositions.push(newFood);\r\n        }\r\n        this.setState({ foodList: newFoodList });\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.lang = words[language].code;\r\n        msg.text = words[language][subject][newFoodList[0].wordIndex];\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    eatFood() {\r\n        const { score } = this.state;\r\n        this.setState({ foodList: [], score: score + scorePerFood });\r\n        this.generateFood();\r\n    }\r\n\r\n    render() {\r\n        const { foodList, directionVector, score} = this.state;\r\n        const { language, subject, exit } = this.props;\r\n        const practiceWord = foodList[0] && words[language][subject][foodList[0].wordIndex];\r\n        \r\n        return <div className=\"game-container\">\r\n            <div className=\"left-side\">\r\n                <div className=\"up-button\" onClick={() => this.setDirectionVectorFromKeyEvent({key: 'ArrowUp'})}>up</div>\r\n                <div className=\"down-button\" onClick={() => this.setDirectionVectorFromKeyEvent({key: 'ArrowDown'})}>down</div>\r\n            </div>\r\n            <div className=\"middle\">\r\n                <div className=\"header\">\r\n                    <div className=\"title\">Linguaboa</div>\r\n                    <div className=\"practice-word\">{practiceWord}</div>\r\n                    <div className=\"score\">{`Score: ${score}`}</div>\r\n                </div>\r\n                <div\r\n                    className=\"board\"\r\n                    onClick={this.clickControl}\r\n                    style={{\r\n                        gridTemplateRows: `repeat(${boardSize}, 1fr)`,\r\n                        gridTemplateColumns: `repeat(${boardSize}, 1fr)`,\r\n                        fontSize: `${55 / boardSize}vmin`\r\n                    }}\r\n                >\r\n                    <Snake\r\n                        x={Math.floor(boardSize/2)} y={Math.floor(boardSize/2)}\r\n                        newSnakePartPositions={this.newSnakePartPositions}\r\n                        foodList={foodList}\r\n                        eat={this.eatFood}\r\n                        die={exit}\r\n                        boardWidth={boardSize}\r\n                        boardHeight={boardSize}\r\n                        directionVector={directionVector}\r\n                    />\r\n                    {foodList.map(\r\n                        food => (\r\n                            <Food\r\n                                x={food.x} y={food.y}\r\n                                key={`${food.x}-${food.y}`}\r\n                                language={language}\r\n                                subject={subject}\r\n                                wordIndex={food.wordIndex}\r\n                            />\r\n                        )\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"right-side\">\r\n                <div className=\"left-button\" onClick={() => this.setDirectionVectorFromKeyEvent({key: 'ArrowLeft'})}>left</div>\r\n                <div className=\"right-button\" onClick={() => this.setDirectionVectorFromKeyEvent({key: 'ArrowRight'})}>right</div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}","import React from 'react';\r\nimport { words, symbols } from '../words';\r\n\r\nfunction Menu(props) {\r\n    const languages = Object.keys(words);\r\n    const subjects = Object.keys(symbols);\r\n\r\n    const { setLanguage, setSubject, play, language, subject} = props;\r\n\r\n    return (\r\n        <div className=\"Menu\">\r\n            <form>\r\n                <label>\r\n                    Language:\r\n                    <select value={language} onChange={event => setLanguage(event.target.value)}>\r\n                        {languages.map(language => <option value={language} key={language}>{language}</option>)}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    Subject:\r\n                    <select value={subject} onChange={event => setSubject(event.target.value)}>\r\n                        {subjects.map(subject => <option value={subject} key={subject}>{subject}</option>)}\r\n                    </select>\r\n                </label>\r\n                <input type=\"button\" value=\"Play\"  onClick={play} />\r\n            </form>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Menu;","import React, { useState } from 'react';\nimport Game from './components/Game';\nimport Menu from './components/Menu';\nimport { words, symbols } from './words';\nimport './App.css';\n\nfunction App() {\n  const [language, setLanguage] = useState(Object.keys(words)[0]);\n  const [subject, setSubject] = useState(Object.keys(symbols)[0]);\n  const [screen, setScreen] = useState('menu');\n\n  const getScreen = () => {\n    switch(screen) {\n      case 'menu':\n        return <Menu\n          language={language}\n          setLanguage={setLanguage}\n          subject={subject}\n          setSubject={setSubject}\n          play={() => setScreen('game')}\n        />;\n      case 'game':\n        return <Game\n          language={language}\n          subject={subject}\n          exit={() => setScreen('menu')}\n        />;\n    };\n  }\n  \n  return (\n    <div className=\"App\">\n      {getScreen()}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}