{"version":3,"sources":["components/SnakePart.js","components/Snake.js","words.js","components/Food.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["SnakePart","this","props","x","y","type","from","to","directionStyle","style","gridRowStart","gridColumnStart","className","React","Component","Snake","initialState","partsList","length","directionVector","state","update","bind","move","die","eat","now","before","setState","animationID","window","requestAnimationFrame","cancelAnimationFrame","fromCoordinates","toCoordinates","fromX","fromY","xDiff","yDiff","index","coordinates","prevCoordinates","undefined","nextCoordinates","getDirectionFromCoordinates","key","foodList","newSnakePartPositions","boardWidth","boardHeight","oldHeadPos","newHeadPos","ateOwnPart","some","part","outsideBoard","newSnakeBody","slice","foodIndex","findIndex","food","map","getPartElementByIndex","symbols","numbers","animals","words","english","code","german","albanian","greek","dutch","danish","polish","chinese","subject","wordIndex","Board","practiceLanguage","practiceSubject","snakePositions","eatFood","generateFood","reset","clickControl","addEventListener","e","newFood","positionIsOccupied","wordAlreadyChosen","occupiedPositions","newFoodList","i","Math","floor","random","word","push","msg","SpeechSynthesisUtterance","lang","text","console","log","speechSynthesis","speak","event","rect","target","children","getBoundingClientRect","newDirectionVector","top","clientY","bottom","left","clientX","right","practiceWord","onClick","language","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.93429525.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./SnakePart.css\";\r\n\r\nexport default class SnakePart extends React.Component {\r\n    render() {\r\n        const {x, y, type, from, to} = this.props;\r\n        const directionStyle = `${from ? `snake-part-from-${from} ` : ''}${to ? `snake-part-to-${to}` : ''}`\r\n        return <div\r\n            style={{\r\n                gridRowStart: y,\r\n                gridColumnStart: x\r\n            }}\r\n            className={`snake-part snake-part-${type} ${directionStyle}`}\r\n        >\r\n        </div>;\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SnakePart from \"./SnakePart.js\";\r\n\r\nexport default class Snake extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {x, y} = this.props;\r\n        this.initialState = {\r\n            partsList: [\r\n                {x, y},\r\n                {x: x+1, y},\r\n                {x: x+2, y}\r\n            ],\r\n            length: 3,\r\n            directionVector: { x: 0, y: 0 }, \r\n        }\r\n        this.state = this.initialState;\r\n        this.update = this.update.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.die = this.die.bind(this);\r\n        this.eat = this.eat.bind(this);\r\n    }\r\n\r\n    update(now) {\r\n        if (now - this.before > 1000 / this.state.length + 100) {\r\n            this.setState({directionVector: this.props.directionVector})\r\n            this.move();\r\n            this.before = now;\r\n        }\r\n        this.animationID = window.requestAnimationFrame(this.update);  \r\n    }\r\n\r\n    componentDidMount() { \r\n        this.before = 0;\r\n        this.animationID = window.requestAnimationFrame(this.update);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        window.cancelAnimationFrame(this.animationID);\r\n    }\r\n\r\n    getDirectionFromCoordinates(fromCoordinates, toCoordinates) {\r\n        if (!fromCoordinates || !toCoordinates) return\r\n        const { x: fromX, y: fromY } = fromCoordinates;\r\n        const { x: toX, y: toY } = toCoordinates;\r\n        const [xDiff, yDiff] = [fromX-toX, fromY-toY];\r\n        if (yDiff === 0) {\r\n            if (xDiff === 1) return 'left';\r\n            if (xDiff === -1) return 'right';\r\n        }\r\n        if (xDiff === 0) {\r\n            if (yDiff === 1) return 'up';\r\n            if (yDiff === -1) return 'down';\r\n        }\r\n    }\r\n\r\n    getPartElementByIndex(index) {\r\n        const { partsList } = this.state;\r\n        const coordinates = partsList[index];\r\n        const type = index === 0 ? 'head' : (index === partsList.length - 1 ? 'tail' : 'middle');\r\n        const prevCoordinates = type === 'tail' ? undefined : partsList[index + 1];\r\n        const nextCoordinates = type === 'head' ? undefined : partsList[index - 1];\r\n        return <SnakePart  \r\n            x={coordinates.x}\r\n            y={coordinates.y}\r\n            type={type}\r\n            from={this.getDirectionFromCoordinates(coordinates, prevCoordinates)}\r\n            to={this.getDirectionFromCoordinates(coordinates, nextCoordinates)}\r\n            key={`${coordinates.x}-${coordinates.y}`}\r\n        />\r\n    }\r\n\r\n    move() {\r\n        const { partsList, length, directionVector } = this.state;\r\n        if (directionVector.x === 0 && directionVector.y === 0) return;\r\n        const { foodList, newSnakePartPositions, boardWidth, boardHeight } = this.props;\r\n\r\n        const oldHeadPos = partsList[0];\r\n        const newHeadPos = {\r\n            x: oldHeadPos.x + directionVector.x,\r\n            y: oldHeadPos.y + directionVector.y,\r\n        }\r\n\r\n        const ateOwnPart = partsList.some(\r\n            part => part.x === newHeadPos.x && part.y === newHeadPos.y\r\n        );\r\n        const outsideBoard = newHeadPos.x <= 0 || newHeadPos.x > boardWidth ||\r\n            newHeadPos.y <= 0 || newHeadPos.y > boardHeight;\r\n\r\n        if (ateOwnPart || outsideBoard) {\r\n            this.die();\r\n            return;\r\n        }\r\n\r\n        const shouldGrow = length > partsList.length;\r\n        const newSnakeBody = shouldGrow ? partsList : partsList.slice(0, -1);\r\n        this.setState({partsList: [newHeadPos, ...newSnakeBody]});\r\n        newSnakePartPositions( partsList );\r\n\r\n        const foodIndex = foodList\r\n            .findIndex(food => (food.x === newHeadPos.x) && (food.y === newHeadPos.y));\r\n        if (foodIndex !== -1) this.eat(foodIndex);\r\n    }\r\n\r\n    eat(foodIndex) {\r\n        // To avoid extra variables we define the first element as the correct element\r\n        if (foodIndex !== 0) this.die();\r\n        this.setState({length: this.state.length + 2});\r\n        this.props.eat(foodIndex);\r\n    }\r\n\r\n    die() {\r\n        this.setState(this.initialState);\r\n        this.props.die();\r\n    }\r\n\r\n    render() {\r\n        const {x, y} = this.props;\r\n        const {partsList} = this.state;\r\n        return partsList.map((part, index) => this.getPartElementByIndex(index));\r\n    }\r\n}","export const symbols = {\r\n    numbers: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n    animals: ['🐻', '🐎', '🐘', '🐱', '🐦', '🐭']\r\n}\r\n\r\nexport const words = {\r\n    english: {\r\n        code: 'en',\r\n        numbers: ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'],\r\n        animals: ['bear', 'horse', 'elephant', 'cat', 'bird', 'mouse'],\r\n    },\r\n    german: {\r\n        code: 'de-DE',\r\n        numbers: ['null', 'eins', 'zwei', 'drei', 'vier', 'fünf', 'sechs', 'sieben', 'acht', 'neun', 'zehn'],\r\n        animals: [\"Bär\", \"Pferd\", \"Elefant\", \"Katze\", 'vogel', \"Maus\"],\r\n    },\r\n    albanian: {\r\n        code: 'sq-AL',\r\n        numbers: ['zero', 'një', 'dy', 'tre', 'katër', 'pesë', 'gjashtë', 'shtatë', 'tetë', 'nëntë', 'dhjetë'],\r\n        animals: ['ariu', 'kali', 'elefanti', 'mace', 'zog', 'miu'],\r\n    },\r\n    greek: {\r\n        code: 'el-GR',\r\n        numbers: ['μηδέν', 'ένα', 'δύο', 'τρία', 'τέσσερα', 'πέντε', 'έξι', 'εφτά', 'οχτώ', 'εννιά', 'δέκα'],\r\n        animals: ['αρκούδα', 'άλογο', 'ελέφαντας', 'γάτα', 'πουλί', 'ποντίκι'],\r\n    },\r\n    dutch: {\r\n        code: 'nl',\r\n        numbers: ['nul', 'een', 'twee', 'drie', 'vier', 'vijf', 'zes', 'zeven', 'acht', 'negen', 'tien'],\r\n        animals: ['beer', 'paard', 'olifant', 'kat', 'vogel', 'muis'],\r\n    },\r\n    danish: {\r\n        code: 'da',\r\n        numbers: ['nul', 'en', 'to', 'tre', 'fire', 'fem', 'seks', 'syv', 'otte', 'ni', 'ti'],\r\n        animals: ['bjørn', 'hest', 'elefant', 'kat', 'fugl', 'mus'],\r\n    },\r\n    polish: {\r\n        code: 'pl',\r\n        numbers: ['zero', 'jeden', 'dwa', 'trzy', 'cztery', 'pięć', 'sześć', 'siedem', 'osiem', 'dziewięć', 'dziesięć'],\r\n        animals: ['niedźwiedź', 'koń', 'słoń', 'kot', 'ptak', 'mysz'],\r\n    },\r\n    chinese: {\r\n        code: 'zh',\r\n        numbers: ['零', '一', '两个', '三个', '四', '五', '六', '七', '八', '九', '十'], \r\n        animals: ['熊', '马', '大象', '猫', '鸟', '老鼠'], \r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Food.css\";\r\nimport { symbols } from \"../words\";\r\n\r\nexport default class SnakePart extends React.Component {\r\n\r\n    render() {\r\n        const {x, y, subject} = this.props;\r\n        return <div\r\n            style={{\r\n                gridRowStart: y,\r\n                gridColumnStart: x\r\n            }}\r\n            className={`food`}\r\n        >\r\n            {symbols[subject][this.props.wordIndex]}\r\n        </div>;\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Game.css\";\r\nimport Snake from \"./Snake.js\"\r\nimport Food from \"./Food\";\r\nimport { words, symbols } from \"../words\";\r\n\r\nexport default class Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const [x, y] = [10, 10];\r\n        this.state = {\r\n            practiceLanguage: 'german',\r\n            practiceSubject: 'animals',\r\n            foodList: [],\r\n            snakePositions: [{x, y}, {x: x+1, y}, {x: x+2, y}],\r\n            directionVector: {x: 0, y: 0}\r\n        }\r\n        this.eatFood = this.eatFood.bind(this);\r\n        this.generateFood = this.generateFood.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.clickControl = this.clickControl.bind(this);\r\n        this.newSnakePartPositions =\r\n            snakePositions => this.setState({ snakePositions });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateFood();\r\n\r\n        window.addEventListener('keydown', e => {\r\n            const { snakePositions } = this.state;\r\n            switch (e.key) {\r\n                case 'ArrowUp':\r\n                    if (snakePositions[0].y - snakePositions[1].y === 1) break;\r\n                    this.setState({directionVector: { x: 0, y: -1}});\r\n                    break;\r\n                case 'ArrowDown':\r\n                    if (snakePositions[0].y - snakePositions[1].y === -1) break;\r\n                    this.setState({directionVector: { x: 0, y: 1}});\r\n                    break;\r\n                case 'ArrowLeft':\r\n                    if (snakePositions[0].x - snakePositions[1].x === 1) break;\r\n                    this.setState({directionVector: { x: -1, y: 0}});\r\n                    break;\r\n                case 'ArrowRight':\r\n                    if (snakePositions[0].x - snakePositions[1].x === -1) break;\r\n                    this.setState({directionVector: { x: 1, y: 0}});\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    generateFood() {\r\n        const { foodList, snakePositions, practiceSubject, practiceLanguage } = this.state;\r\n        const occupiedPositions = [ ...foodList, ...snakePositions ];\r\n        let newFood, positionIsOccupied, wordAlreadyChosen, newFoodList = [];\r\n        for(let i = 0; i < 3; i++) {\r\n            do {\r\n                newFood = {\r\n                    x: Math.floor(Math.random() * 20 + 1),\r\n                    y: Math.floor(Math.random() * 20 + 1),\r\n                }\r\n                positionIsOccupied = occupiedPositions.some(\r\n                    part => part.x === newFood.x && part.y === newFood.y\r\n                );\r\n            } while(positionIsOccupied);\r\n\r\n            do {\r\n                newFood.wordIndex = Math.floor(Math.random() * symbols[practiceSubject].length);\r\n                wordAlreadyChosen = newFoodList.some(word => word.wordIndex === newFood.wordIndex);\r\n            } while(wordAlreadyChosen);\r\n            newFoodList.push(newFood);\r\n        }\r\n        this.setState({ foodList: newFoodList });\r\n        var msg = new SpeechSynthesisUtterance();\r\n        msg.lang = words[practiceLanguage].code;\r\n        msg.text = words[practiceLanguage][practiceSubject][newFoodList[0].wordIndex];\r\n        console.log(words[practiceLanguage][practiceSubject][newFoodList[0].wordIndex])\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    eatFood() {\r\n        this.setState({ foodList: [] });\r\n        this.generateFood();\r\n    }\r\n\r\n    reset() {\r\n        const [x, y] = [10, 10];\r\n        this.setState({\r\n            foodList: [],\r\n            snakePositions: [{x, y}, {x: x+1, y}, {x: x+2, y}],\r\n            directionVector: {x: 0, y: 0},\r\n        });\r\n        this.generateFood();\r\n    }\r\n\r\n    clickControl(event) {\r\n        let { directionVector } = this.state;\r\n        const rect = event.target.children[0].getBoundingClientRect();\r\n        const direction = {\r\n            up: rect.top > event.clientY,\r\n            down: rect.bottom < event.clientY,\r\n            left: rect.left > event.clientX,\r\n            right: rect.right < event.clientX,\r\n        }\r\n        let newDirectionVector = {x: 0, y: 0};\r\n        if (directionVector.y === 0 && rect.top > event.clientY) newDirectionVector.y = -1;\r\n        else if (directionVector.y === 0 && rect.bottom < event.clientY) newDirectionVector.y = 1;\r\n        else if (directionVector.x === 0 && rect.left > event.clientX) newDirectionVector.x = -1;\r\n        else if (directionVector.x === 0 && rect.right < event.clientX) newDirectionVector.x = 1;\r\n        console.log(directionVector, newDirectionVector);\r\n        this.setState({directionVector: newDirectionVector});\r\n    }\r\n\r\n    render() {\r\n        const { foodList, practiceLanguage, practiceSubject, directionVector } = this.state;\r\n        const practiceWord = foodList[0] && words[practiceLanguage][practiceSubject][foodList[0].wordIndex];\r\n        \r\n        return <div className=\"board\" onClick={this.clickControl}>\r\n            <Snake\r\n                x={10} y={10}\r\n                newSnakePartPositions={this.newSnakePartPositions}\r\n                foodList={foodList}\r\n                eat={this.eatFood}\r\n                die={this.reset}\r\n                boardWidth={21}\r\n                boardHeight={21}\r\n                directionVector={directionVector}\r\n            />\r\n            {foodList.map(\r\n                food => (\r\n                    <Food\r\n                        x={food.x} y={food.y}\r\n                        key={`${food.x}-${food.y}`}\r\n                        language={practiceLanguage}\r\n                        subject={practiceSubject}\r\n                        wordIndex={food.wordIndex}\r\n                    />\r\n                )\r\n            )}\r\n            <div>{practiceWord}</div>\r\n        </div>;\r\n    }\r\n}","import React from 'react';\nimport Game from './components/Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}