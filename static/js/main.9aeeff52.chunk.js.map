{"version":3,"sources":["gameSettings.js","words.js","store.js","components/Controls.jsx","components/SnakePart.js","components/Snake.jsx","components/Food.jsx","components/Dialog.jsx","components/Game.jsx","utils.js","components/Menu.jsx","App.jsx","serviceWorker.js","index.js"],"names":["initialSnakePositions","boardCenter","x","Math","floor","boardSize","y","positionList","i","push","symbols","numbers","animals","words","english","code","german","albanian","greek","dutch","danish","polish","chinese","turkish","Store","subject","language","foodList","foodEatenAmount","directionVector","snakePositions","wrongWord","ateOwnPart","outsideBoard","lastUpdate","getRandomBoardPosition","random","positionIsOccupied","coordinates","occupiedPositions","some","getRandomFreeBoardPosition","randomPosition","isWordIndexAlreadyInGame","wordIndex","item","getRandomNonActiveWordIndex","randomWordIndex","length","generateFood","food","turn","event","key","eat","practiceWordIndex","move","oldHeadPos","newHeadPos","part","alive","newSnakeBody","slice","foodOnHeadPosition","find","update","now","speed","animationID","window","requestAnimationFrame","cancelAnimationFrame","makeObservable","this","observable","computed","practiceWord","rightSymbol","score","action","currentPracticeWordList","currentPracticeSymbolList","Container","styled","div","Button","button","LeftControls","RightControls","Contents","Controls","observer","store","children","useEffect","addEventListener","removeEventListener","onClick","SnakePart","type","from","to","directionToIntCode","dir","indexOf","fromCode","toCode","changesDirection","mainDirectionCode","tileSVG","fixedPositionStyle","position","style","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","cx","cy","r","gridRowStart","gridColumnStart","transform","Snake","getDirectionFromCoordinates","fromCoordinates","toCoordinates","fromX","fromY","xDiff","yDiff","map","index","partsList","prevCoordinates","undefined","nextCoordinates","getPartElementByIndex","FoodTile","Food","symbol","Message","ButtonsContainer","Dialog","exit","playAgain","message","Board","props","size","Header","Game","restart","languageCode","text","msg","SpeechSynthesisUtterance","lang","speechSynthesis","speak","saySomething","foodComponents","showDialog","Title","h1","Options","form","Dropdowns","PlayBtn","input","Menu","setLanguage","setSubject","play","languages","Object","keys","subjects","htmlFor","id","value","onChange","target","languageItem","subjectItem","Application","App","useState","setStore","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.9aeeff52.chunk.js","sourcesContent":["export const boardSize = 15;\r\nexport const snakeInitialSize = 3;\r\nexport const snakeLengthIncrease = 3;\r\nexport const foodAmount = 3;\r\nexport const scorePerFood = 10;\r\nexport const initialSpeed = 3; //moves per second\r\nexport const speedIncrement = 0.2;\r\nexport const limitSpeed = 5;\r\nexport const initialSnakePositions = (() => {\r\n    const boardCenter = {x: Math.floor(boardSize / 2), y: Math.floor(boardSize / 2)};\r\n    let positionList = [];\r\n    for (let i = 0; i < snakeInitialSize; i++) {\r\n        positionList.push({x: boardCenter.x + i, y: boardCenter.y});\r\n    }\r\n\r\n    return positionList;\r\n})()","export const symbols = {\n  numbers: ['0️⃣', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣', '9️⃣', '🔟'],\n  animals: ['🐻', '🐎', '🐘', '🐱', '🐦', '🐭'],\n};\n\nexport const words = {\n  english: {\n    code: 'en',\n    numbers: ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'],\n    animals: ['bear', 'horse', 'elephant', 'cat', 'bird', 'mouse'],\n  },\n  german: {\n    code: 'de-DE',\n    numbers: ['null', 'eins', 'zwei', 'drei', 'vier', 'fünf', 'sechs', 'sieben', 'acht', 'neun', 'zehn'],\n    animals: ['Bär', 'Pferd', 'Elefant', 'Katze', 'vogel', 'Maus'],\n  },\n  albanian: {\n    code: 'sq-AL',\n    numbers: ['zero', 'një', 'dy', 'tre', 'katër', 'pesë', 'gjashtë', 'shtatë', 'tetë', 'nëntë', 'dhjetë'],\n    animals: ['ariu', 'kali', 'elefanti', 'mace', 'zog', 'miu'],\n  },\n  greek: {\n    code: 'el-GR',\n    numbers: ['μηδέν', 'ένα', 'δύο', 'τρία', 'τέσσερα', 'πέντε', 'έξι', 'εφτά', 'οχτώ', 'εννιά', 'δέκα'],\n    animals: ['αρκούδα', 'άλογο', 'ελέφαντας', 'γάτα', 'πουλί', 'ποντίκι'],\n  },\n  dutch: {\n    code: 'nl',\n    numbers: ['nul', 'een', 'twee', 'drie', 'vier', 'vijf', 'zes', 'zeven', 'acht', 'negen', 'tien'],\n    animals: ['beer', 'paard', 'olifant', 'kat', 'vogel', 'muis'],\n  },\n  danish: {\n    code: 'da',\n    numbers: ['nul', 'en', 'to', 'tre', 'fire', 'fem', 'seks', 'syv', 'otte', 'ni', 'ti'],\n    animals: ['bjørn', 'hest', 'elefant', 'kat', 'fugl', 'mus'],\n  },\n  polish: {\n    code: 'pl',\n    numbers: ['zero', 'jeden', 'dwa', 'trzy', 'cztery', 'pięć', 'sześć', 'siedem', 'osiem', 'dziewięć', 'dziesięć'],\n    animals: ['niedźwiedź', 'koń', 'słoń', 'kot', 'ptak', 'mysz'],\n  },\n  chinese: {\n    code: 'zh',\n    numbers: ['零', '一', '两个', '三个', '四', '五', '六', '七', '八', '九', '十'],\n    animals: ['熊', '马', '大象', '猫', '鸟', '老鼠'],\n  },\n  turkish: {\n    code: 'tr',\n    numbers: ['sıfır', 'bir', 'iki', 'üç', 'dört', 'beş', 'altı', 'yedi', 'sekiz', 'dokuz', 'on'],\n    animals: ['ayı', 'at', 'fil', 'kedi', 'kuş', 'far'],\n  },\n};\n","import { action, computed, makeObservable, observable } from 'mobx';\nimport { boardSize, foodAmount, initialSnakePositions, initialSpeed, scorePerFood, snakeInitialSize, snakeLengthIncrease, speedIncrement } from './gameSettings';\nimport { words, symbols } from './words';\n\nexport default class Store {\n  foodList = [];\n  foodEatenAmount = 0;\n  subject = '';\n  language = '';\n  directionVector = { x: 0, y: 0 };\n  snakePositions = initialSnakePositions;\n  wrongWord = false;\n  ateOwnPart = false;\n  outsideBoard = false;\n  lastUpdate = 0;\n\n  constructor({ subject, language }) {\n    makeObservable(this, {\n      foodList: observable,\n      foodEatenAmount: observable,\n      snakePositions: observable,\n      wrongWord: observable,\n      ateOwnPart: observable,\n      outsideBoard: observable,\n      alive: computed,\n      practiceWordIndex: computed,\n      practiceWord: computed,\n      rightSymbol: computed,\n      score: computed,\n      occupiedPositions: computed,\n      generateFood: action,\n      turn: action,\n      eat: action,\n      move: action,\n      update: action,\n    });\n\n    this.subject = subject;\n    this.language = language;\n    this.generateFood();\n    window.requestAnimationFrame(this.update);\n  }\n\n  get alive() {\n    return !(this.wrongWord || this.ateOwnPart || this.outsideBoard);\n  }\n\n  get practiceWordIndex() {\n    return this.foodList[0].wordIndex;\n  }\n\n  get practiceWord() {\n    const currentPracticeWordList = words[this.language][this.subject];\n    return this.foodList[0] && currentPracticeWordList[this.practiceWordIndex];\n  }\n\n  get rightSymbol() {\n    const currentPracticeSymbolList = symbols[this.subject];\n    return this.foodList[0] && currentPracticeSymbolList[this.practiceWordIndex];\n  }\n\n  get score() {\n    return this.foodEatenAmount * scorePerFood;\n  }\n\n  get occupiedPositions() {\n    return [...this.snakePositions, ...this.foodList];\n  }\n\n  getRandomBoardPosition = () => {\n    return {\n      x: Math.floor(Math.random() * boardSize + 1),\n      y: Math.floor(Math.random() * boardSize + 1)\n    }\n  }\n\n  positionIsOccupied = coordinates => {\n    const hasSameCoordinates = ({x, y}) => x === coordinates.x && y === coordinates.y;\n    return  this.occupiedPositions.some(hasSameCoordinates);\n  }\n\n  getRandomFreeBoardPosition = () => {\n    const randomPosition = this.getRandomBoardPosition();\n    if (this.positionIsOccupied(randomPosition))\n      return this.getRandomFreeBoardPosition();\n    return randomPosition;\n  }\n\n  isWordIndexAlreadyInGame = wordIndex => {\n    const hasSameWordIndexWithFood = (item) => item.wordIndex === wordIndex;\n    return this.foodList.some(hasSameWordIndexWithFood);\n  }\n\n  getRandomNonActiveWordIndex = () => {\n    const randomWordIndex = Math.floor(Math.random() * symbols[this.subject].length);\n    if (this.isWordIndexAlreadyInGame(randomWordIndex))\n      return this.getRandomNonActiveWordIndex();\n    return randomWordIndex;\n  }\n\n  generateFood = () => {\n    this.foodList = [];\n    while (this.foodList.length < foodAmount) {\n      let food = this.getRandomFreeBoardPosition();\n      food.wordIndex = this.getRandomNonActiveWordIndex();\n      this.foodList.push(food);\n    }\n  }\n\n  turn = event => {\n    switch (event.key) {\n      case 'ArrowUp':\n        if (this.snakePositions[0].y - this.snakePositions[1].y === 1) break;\n        this.directionVector = { x: 0, y: -1 };\n        break;\n      case 'ArrowDown':\n        if (this.snakePositions[0].y - this.snakePositions[1].y === -1) break;\n        this.directionVector = { x: 0, y: 1 };\n        break;\n      case 'ArrowLeft':\n        if (this.snakePositions[0].x - this.snakePositions[1].x === 1) break;\n        this.directionVector = { x: -1, y: 0 };\n        break;\n      case 'ArrowRight':\n        if (this.snakePositions[0].x - this.snakePositions[1].x === -1) break;\n        this.directionVector = { x: 1, y: 0 };\n        break;\n      default:\n    }\n  }\n\n  eat = food => {\n    if (food.wordIndex !== this.practiceWordIndex) this.wrongWord = true;\n    this.foodEatenAmount++;\n    this.generateFood();\n  }\n\n  move = () => {\n    const { directionVector, snakePositions, foodList, foodEatenAmount } = this;\n    if (directionVector.x === 0 && directionVector.y === 0) return;\n    const oldHeadPos = snakePositions[0];\n    const newHeadPos = {\n      x: oldHeadPos.x + directionVector.x,\n      y: oldHeadPos.y + directionVector.y,\n    };\n\n    this.ateOwnPart = snakePositions.some(\n      part => part.x === newHeadPos.x && part.y === newHeadPos.y,\n    );\n\n    this.outsideBoard = newHeadPos.x <= 0 || newHeadPos.x > boardSize ||\n      newHeadPos.y <= 0 || newHeadPos.y > boardSize;\n\n    if (!this.alive) {\n      return;\n    }\n\n    const targetLength = snakeInitialSize + foodEatenAmount * snakeLengthIncrease;\n    const currentLength = snakePositions.length;\n    const shouldGrow = targetLength > currentLength;\n    const newSnakeBody = shouldGrow ? snakePositions : snakePositions.slice(0, -1);\n    this.snakePositions = [newHeadPos, ...newSnakeBody];\n\n    const foodOnHeadPosition = foodList\n      .find(food => (food.x === newHeadPos.x) && (food.y === newHeadPos.y));\n    if (foodOnHeadPosition) this.eat(foodOnHeadPosition);\n  }\n\n  update = now => {\n    const speed = initialSpeed + this.foodEatenAmount * speedIncrement;\n    if (now - this.lastUpdate > 1000 / speed) {\n      this.move();\n      this.lastUpdate = now;\n    }\n\n    const animationID = window.requestAnimationFrame(this.update);\n    if (!this.alive) window.cancelAnimationFrame(animationID);\n  }\n}","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  justify-content: space-evenly;\n  flex-direction: row;\n  align-items: center;\n  user-select: none;\n  @media (orientation: portrait) {\n    flex-wrap: wrap;\n  }\n`\n\nconst Button = styled.button`\n  background-color: #63EC2E;\n  color: #004200;\n  font-family: \"Reggae One\";\n  font-size: 20px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 2px 2px 2px 5px #004200, inset 1px 1px 3px white;\n  height: 10vmin;\n  width: 10vmin;\n  margin: 10px;\n  text-align: center;\n  border-radius: 20px;\n`\n\nconst LeftControls = styled.div`\n  @media (orientation: portrait) {\n    order: 2;\n  }\n`\n\nconst RightControls = styled.div`\n  @media (orientation: portrait) {\n    order: 3;\n  }\n`\n\nconst Contents = styled.div`\n  @media (orientation: portrait) {\n    order: 1;\n  }\n`\n\nconst Controls = observer(({ store, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', store.turn);\n    \n    return () => {\n      window.removeEventListener('keydown', store.turn);\n    }\n  }, [store]);\n\n  return (\n    <Container>\n      <LeftControls>\n        <Button onClick={() => store.turn({ key: 'ArrowUp' })}>\n          ↑\n        </Button>\n        <Button onClick={() => store.turn({ key: 'ArrowDown' })}>\n          ↓\n        </Button>\n      </LeftControls>\n      <Contents>\n        { children }\n      </Contents>\n      <RightControls>\n        <Button onClick={() => store.turn({ key: 'ArrowLeft' })}>\n          ←\n        </Button>\n        <Button onClick={() => store.turn({ key: 'ArrowRight' })}>\n          →\n        </Button>\n      </RightControls>\n    </Container>\n  );\n})\n\nControls.propTypes = {\n  store: PropTypes.object.isRequired,\n  restart: PropTypes.func,\n  exit: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SnakePart = ({x, y, type, from, to}) => {\r\n    const directionToIntCode = dir => {\r\n        const code = ['up', 'right', 'down', 'left'].indexOf(dir);\r\n        // I use '4' to encode the fact that no direction is given.\r\n        // By taking the smallest number of 'from' and 'to' we ensure\r\n        // that we only get defined directions.\r\n        if (code === -1) return 4;\r\n        return code;\r\n    };\r\n\r\n    const [fromCode, toCode] = [directionToIntCode(from), directionToIntCode(to)];\r\n\r\n    const changesDirection = ((toCode - fromCode) % 2) != 0;\r\n    \r\n    let mainDirectionCode = fromCode < toCode ? fromCode : toCode;\r\n    // check special left-up case\r\n    if ((fromCode === 0 && toCode === 3) || (fromCode === 3 && toCode === 0))\r\n        mainDirectionCode = 3;\r\n\r\n    const fixedPositionStyle = {position:\"fixed\"};\r\n    let tileSVG;\r\n    switch(type) {\r\n        case 'head':\r\n            tileSVG = (<svg style={fixedPositionStyle}  width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M31.2743 85L18.2847 45.7249C13.7743 30 15.7743 25 25.7847 15.2249V0H75.7847V15.2249C85.7743 25 87.7743 30 83.2847 45.7249L76.7795 65.3624L70.2743 85C65.7743 95 60.7743 99.5 50.7743 99.5C40.7743 99.5 35.7743 95 31.2743 85Z\" fill=\"#63EC2E\"/>\r\n            <path d=\"M25.0104 0V15.2249C15 25 13 30 17.5104 45.7249L30.5 85C35 95 40 99.5 50 99.5C60 99.5 65 95 69.5 85L76.0052 65.3624L82.5104 45.7249C87 30 85 25 75.0104 15.2249V0\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <circle cx=\"72.5\" cy=\"52.5\" r=\"11\" fill=\"#0082B4\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <circle cx=\"27.5\" cy=\"52.5\" r=\"11\" fill=\"#0082B4\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <path d=\"M25 42C17.4 44 16.5 50.5 17 53.5C23 46.7 33.5 47.6667 38 49C35.2 41.8 28.1667 41.3333 25 42Z\" fill=\"#63EC2E\"/>\r\n            <path d=\"M75.64 42.3576C82.7049 44.555 83.1742 50.1469 82.5257 52.6682C77.2544 46.4888 67.2748 46.628 62.9439 47.47C66.0123 41.5231 72.6864 41.5838 75.64 42.3576Z\" fill=\"#63EC2E\"/>\r\n            <circle cx=\"27.5\" cy=\"52.5\" r=\"11\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <circle cx=\"72.5\" cy=\"52.5\" r=\"11\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <path d=\"M41 50.257C31.5 44.9926 18.5 49.7784 14 56\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <path d=\"M59 50.257C68.5 44.9926 81.5 49.7784 86 56\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <path d=\"M60 88C60 85.3333 60.8498 80 64.2492 80C64.8158 80 65.609 80.8 64.2492 84\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <path d=\"M40 88C40 85.3333 39.1502 80 35.7508 80C35.1842 80 34.391 80.8 35.7508 84\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <path d=\"M35 15C45 15 49 55 50 70C51.5 55 55 15 65.5 15C57.5 5 42 5 35 15Z\" fill=\"#004200\"/>\r\n            </svg>\r\n            \r\n            );\r\n            break;\r\n        case 'tail':\r\n            tileSVG = (<svg style={fixedPositionStyle} width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M50 99.5C45 99.5 25 35 25 0H75C75 35 55 99.5 50 99.5Z\" fill=\"#63EC2E\"/>\r\n            <path d=\"M25 0C25 35 45 99.5 50 99.5C55 99.5 75 35 75 0\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <path d=\"M60.5 60.5C59.4412 69.5 55.5 74 50.5 74C45.5 74 41 68.5 39.5 60.5C38 52.5 39.5 48 50.5 48C60.5 48 61.3823 53 60.5 60.5Z\" fill=\"#004200\"/>\r\n            <path d=\"M67.5 19C66 29.5 67.4999 36 49.9999 36C33.9999 36 35.0173 31.5 32 19C29.7447 9.65658 32 2 49.9999 2C69.5 2 69 8.5 67.5 19Z\" fill=\"#004200\"/>\r\n            </svg>\r\n            \r\n            );\r\n            break;\r\n        default:\r\n            tileSVG = changesDirection ? (<svg style={fixedPositionStyle}  width=\"100%\" height=\"100%\" viewBox=\"0 1 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M100 26C87 26 75 14 75 1H25C25 40 61 76 100 76V26Z\" fill=\"#63EC2E\"/>\r\n            <path d=\"M75 1C75 14 87 26 100 26\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <path d=\"M25 1C25 40 61 76 100 76\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <path d=\"M85 26C100 34.5 96.5 44 93.5 57.5C90.5 71 65.0362 64.433 52 52.5C38.9638 40.567 33 20 52 10C71 1.84302e-05 73.8838 19.7008 85 26Z\" fill=\"#004200\"/>\r\n            </svg>\r\n            \r\n            ) : (<svg style={fixedPositionStyle}  width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M25 100V0H75V100H25Z\" fill=\"#63EC2E\"/>\r\n            <path d=\"M25 0V100M75 0V100\" stroke=\"#004200\" stroke-width=\"3\"/>\r\n            <path d=\"M70.4687 50.5C70.4687 81 65.5 91 47.4687 88C29.4375 85 29.9687 68.1731 29.9687 50.5C29.9687 32.8269 24.4687 17.5 47.4687 12.5C70.4687 7.5 70.4687 28.8552 70.4687 50.5Z\" fill=\"#004200\"/>\r\n            </svg>\r\n            \r\n             \r\n);\r\n            break;  \r\n    }\r\n    return <div\r\n        style={{\r\n            gridRowStart: y,\r\n            gridColumnStart: x,\r\n            transform: `rotate(${mainDirectionCode*90}deg)`,\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '100%'\r\n        }}\r\n    >\r\n        {tileSVG}\r\n    </div>;\r\n}\r\n\r\nexport default SnakePart;","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport PropTypes from 'prop-types';\nimport SnakePart from './SnakePart';\n\nconst Snake = observer(({ store }) => {\n\n  const getDirectionFromCoordinates = (fromCoordinates, toCoordinates) => {\n    if (!fromCoordinates || !toCoordinates) return;\n    const { x: fromX, y: fromY } = fromCoordinates;\n    const { x: toX, y: toY } = toCoordinates;\n    const [xDiff, yDiff] = [fromX - toX, fromY - toY];\n    if (yDiff === 0) {\n      if (xDiff === 1) return 'left';\n      else if (xDiff === -1) return 'right';\n    } else if (xDiff === 0) {\n      if (yDiff === 1) return 'up';\n      else if (yDiff === -1) return 'down';\n    }\n  }\n\n  const getPartElementByIndex = index => {\n    const { snakePositions: partsList } = store;\n    const coordinates = partsList[index];\n    const type = index === 0 ? 'head' : (index === partsList.length - 1 ? 'tail' : 'middle');\n    const prevCoordinates = type === 'tail' ? undefined : partsList[index + 1];\n    const nextCoordinates = type === 'head' ? undefined : partsList[index - 1];\n    return (\n      <SnakePart  \n        x={coordinates.x}\n        y={coordinates.y}\n        type={type}\n        from={getDirectionFromCoordinates(coordinates, prevCoordinates)}\n        to={getDirectionFromCoordinates(coordinates, nextCoordinates)}\n        key={`${coordinates.x}-${coordinates.y}`}\n      />\n    );\n  }\n  const { snakePositions } = store;\n  return snakePositions.map((part, index) => getPartElementByIndex(index));\n})\n\nSnake.propTypes = {\n  store: PropTypes.object,\n};\n\nexport default Snake;","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { symbols } from '../words';\n\nconst FoodTile = styled.div`\n  color: #A46A23;\n  text-shadow: 1px 1px 2px #004200;\n  text-align: center;\n`\n\nconst Food = ({x, y, subject, wordIndex}) => {\n  const symbol = symbols[subject][wordIndex];\n\n  return (\n    <FoodTile\n      style={{\n        gridRowStart: y,\n        gridColumnStart: x,\n      }}\n    >\n      {symbol}\n    </FoodTile>\n  );\n}\n\nFood.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  subject: PropTypes.string.isRequired,\n  wordIndex: PropTypes.number.isRequired,\n};\n\nexport default Food;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  position: absolute;\n  max-width: 500px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #0082B4;\n  color: #004200;\n  border-radius: 10px;\n  box-shadow: 5px 5px 15px black, inset 1px 1px 3px white, inset -1px -1px 3px black;\n  padding: 20px;\n  z-index: 1;\n`\nconst Message = styled.div``\n\nconst ButtonsContainer = styled.div`\n  width: 100%;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`\n\nconst Button = styled.button`\n  height: 50px;\n  width: 250px;\n  margin: auto;\n  background-color: #63EC2E;\n  color: #004200;\n  font-family: \"Reggae One\";\n  font-size: 20px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 2px 2px 2px 5px #004200, inset 1px 1px 3px white;\n  border-radius: 10px;\n`\n\nconst Dialog = ({ exit, playAgain, wrongWord, practiceWord, symbol, language }) => {\n  const message = wrongWord ?\n    `Wrong... \"${practiceWord}\" means ${symbol} in ${language}.` :\n    'Oh no... You lose.';\n  return (\n    <Container>\n      <Message>\n        {message}\n      </Message>\n      <ButtonsContainer>\n        <Button onClick={playAgain}>Play again</Button>\n        <Button onClick={exit}>Back to main Menu</Button>\n      </ButtonsContainer>\n    </Container>\n  );\n}\n\nDialog.propTypes = {\n  exit: PropTypes.func.isRequired,\n  playAgain: PropTypes.func.isRequired,\n};\n\nexport default Dialog;\n","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Controls from './Controls';\nimport Snake from './Snake';\nimport Food from './Food';\nimport Dialog from './Dialog';\nimport { boardSize } from '../gameSettings';\nimport { words } from '../words';\nimport { saySomething } from '../utils';\n\nconst Board = styled.div`\n  grid-template-rows: repeat(${props => props.size}, 1fr);\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  font-size: ${props => 55 / props.size}vmin;\n  background-color: #FFD489;\n  border: 20px solid #A46A23;\n  border-radius: 20px;\n  width:  80vmin;\n  height: 80vmin;\n  display: grid;\n  box-shadow: 5px 5px 5px 1px black, inset 1px 1px 10px black;\n`\n\nconst Header = styled.div`\n  top: 0;\n  display: flex;\n  height: 5vmin;\n  justify-content: space-between;\n  margin: 1vw;\n`\n\nconst Game = observer(({ store, restart, exit }) => {\n  const { alive, score, foodList, practiceWord, rightSymbol, subject, language, wrongWord } = store;\n\n  useEffect(() => {\n    const languageCode = words[language].code;\n    saySomething(practiceWord, languageCode);\n  }, [foodList]);\n\n  const showDialog = () => {\n    if (!alive) return (\n      <Dialog\n        exit={exit}\n        playAgain={restart}\n        wrongWord={wrongWord}\n        practiceWord={practiceWord}\n        symbol={rightSymbol}\n        language={language}\n      />\n    )\n  }\n\n  const foodComponents = foodList.map((food) => (\n    <Food\n      x={food.x}\n      y={food.y}\n      key={`${food.x}-${food.y}`}\n      subject={subject}\n      wordIndex={food.wordIndex}\n    />\n  ));\n\n  return (\n    <>\n      {showDialog()}\n      <Controls store={store}>\n        <Header>\n          <div>Linguaboa</div>\n          <div>{practiceWord}</div>\n          <div>{`Score: ${score}`}</div>\n        </Header>\n        <Board\n          size={boardSize}\n        >\n          <Snake\n            store={store}\n          />\n          {foodComponents}\n        </Board>\n      </Controls>\n    </>\n  );\n})\n\nGame.propTypes = {\n  store: PropTypes.object.isRequired,\n  restart: PropTypes.func,\n  exit: PropTypes.func.isRequired,\n};\n\nexport default Game;\n","export const saySomething = (text, languageCode) => {\n    const msg = new SpeechSynthesisUtterance();\n    msg.lang = languageCode;\n    msg.text = text;\n    window.speechSynthesis.speak(msg);\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { words, symbols } from '../words';\n\nconst Container = styled.div`\n  width: 500px;\n  height: 600px;\n  display: flex;\n  flex-direction: column;\n  background-color: #0082B4;\n  border-radius: 5px;\n  box-shadow: 5px 5px 5px 1px black,\n    inset -1px -1px 5px black,\n    inset 1px 1px 5px white;\n\n  @media (max-width: 600px), (max-height: 600px) {\n    width: 100%;\n    height: 100%;\n    box-shadow: none;\n    border-radius: 0;\n  }\n`\n\nconst Title = styled.h1`\n  text-shadow: 5px 5px #004200;\n  font-size: 70px;\n  width: 100%;\n  text-align: center;\n\n  @media (max-width: 600px) {\n    margin: 5vh 5vw 5vh 5vw;\n    width: 90vw;\n    font-size: 12vw;\n  }\n\n  @media (max-height: 330px) {\n    margin: 5vh 5vw 5vh 5vw;\n    width: 90vw;\n    font-size: 12vw;\n  }\n`\n\nconst Options = styled.form`\n  height: 100%;\n  max-width: 100%;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-direction: column;\n  @media screen and (max-height: 480px) {\n    flex-direction: row;\n  }\n`\n\nconst Dropdowns = styled.div`\n  display: flex;\n  flex-direction: column;\n  label {\n    padding: 15px;\n  }\n  select {\n    background-color: #63EC2E;\n    color: #004200;\n    margin-left: 10px;\n    font-size: 20px;\n    font-family: \"Reggae One\";\n  }\n`\n\nconst PlayBtn = styled.input`\n  height: 100px;\n  width: 300px;\n  background-color: #63EC2E;\n  color: #004200;\n  font-family: \"Reggae One\";\n  font-size: 60px;\n  border: none;\n  cursor: pointer;\n  box-shadow: 2px 2px 2px 5px #004200, inset 1px 1px 3px white;\n  border-radius: 10px;\n  @media (max-width: 500px) {\n    width: 50vw;\n    font-size: 12vw;\n  }\n\n  @media (max-height: 480px){\n    width: 20vw;\n    font-size: 5vw;\n  }\n`\n\nconst Menu = ({ setLanguage, setSubject, play, language, subject }) => {\n  const languages = Object.keys(words);\n  const subjects = Object.keys(symbols);\n\n  return (\n    <Container>\n      <Title>LinguaBoa</Title>\n      <Options>\n        <Dropdowns>\n        <label htmlFor=\"language-select\">\n          Language:\n          <select\n            id=\"language-select\"\n            value={language}\n            onChange={(event) => setLanguage(event.target.value)}\n          >\n            {\n              languages.map((languageItem) => (\n                <option\n                  value={languageItem}\n                  key={languageItem}\n                >\n                  {languageItem}\n                </option>\n              ))\n            }\n          </select>\n        </label>\n        <label htmlFor=\"subject-select\">\n          Subject:\n          <select\n            id=\"subject-select\"\n            value={subject}\n            onChange={(event) => setSubject(event.target.value)}\n          >\n            {subjects.map((subjectItem) => (\n              <option\n                value={subjectItem}\n                key={subjectItem}\n              >\n                {subjectItem}\n              </option>\n            ))}\n          </select>\n        </label>\n        </Dropdowns>\n        <PlayBtn type=\"button\" value=\"PLAY\" onClick={play} />\n      </Options>\n    </Container>\n  );\n}\n\nexport default Menu;\n","import React, { useState } from 'react';\nimport Store from './store';\nimport styled from 'styled-components';\nimport Game from './components/Game';\nimport Menu from './components/Menu';\nimport { words, symbols } from './words';\nimport '@fontsource/reggae-one';\n\nconst Application = styled.div`\n  background-color: #161E11;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: #63EC2E;\n  font-family: \"Reggae One\";\n`\n\nconst App = () => {\n  const [language, setLanguage] = useState(Object.keys(words)[0]);\n  const [subject, setSubject] = useState(Object.keys(symbols)[0]);\n  const [store, setStore] = useState();\n\n  const play = () => {\n    setStore(new Store({subject, language}));\n  }\n\n  const restart = () => {\n    setStore(new Store({subject, language}));\n  }\n\n  const exit = () => {\n    setStore(null);\n  }\n\n\n  const getScreen = () => {\n    if (store) {\n      return (\n        <Game\n          store={store}\n          restart={restart}\n          exit={exit}\n        />\n      );\n    }\n    return (\n      <Menu\n        language={language}\n        setLanguage={setLanguage}\n        subject={subject}\n        setSubject={setSubject}\n        play={play}\n      />\n    );\n  };\n\n  return (\n    <Application>\n      {getScreen()}\n    </Application>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}